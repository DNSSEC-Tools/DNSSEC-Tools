dnl Process this file with autoconf to produce a configure script.
dnl

dnl provide it a file to simply check for its existence.
AC_INIT([dnssec-tools-validator], [0.2], [dnssec-tools-users@lists.sourceforge.net])
AC_PREREQ([2.59])

AC_CONFIG_HEADER(include/validator-config.h)

AC_MSG_CACHE_INIT()

AC_PATH_PROG([PERLPROG],perl)
AC_PATH_PROG(AR, ar)
AC_PATH_PROG(RM, rm)
AC_PATH_PROG(CP, cp)

# libtool info
AC_PROG_LIBTOOL

# useful stuff for installation
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

# system check
AC_CANONICAL_TARGET

#
# save the configure arguments
#
AC_DEFINE_UNQUOTED(LIBVAL_CONFIGURE_OPTIONS,"$ac_configure_args", [Configure options])
CONFIGURE_OPTIONS="\"$ac_configure_args\""
AC_SUBST(CONFIGURE_OPTIONS)

dnl ----------------------------------------------------------------------
# for some reason $prefix is NONE until much later in the script, so
# fix up val_sysconfdir if no prefix or sysconfdir was specified
val_sysconfdir=`eval echo $sysconfdir`
if test "x$val_sysconfdir" = "xNONE/etc" ; then
   val_sysconfdir="${ac_default_prefix}/etc"
fi
AC_MSG_CACHE_ADD(system configuration directory : $val_sysconfdir)

AH_TEMPLATE([VAL_RESOLV_CONF], [Path to resolver configuration])
AC_ARG_WITH(resolv-conf,
[  --with-resolv-conf=FILE resolver config file (SYSCONFDIR/resolv.conf).],
    [ac_cv_user_prompt_VAL_RESOLV_CONF=$with_resolv_conf])

AH_TEMPLATE([VAL_ROOT_HINTS], [Path to root hints config file])
AC_ARG_WITH(root-hints,
[  --with-root-hints=FILE  root.hints config file.],
    [ac_cv_user_prompt_VAL_ROOT_HINTS=$with_root_hints])

VAL_CONFIGURATION_FILE=$val_sysconfdir/dnssec-tools/dnsval.conf
AC_ARG_WITH(dnsval-conf,
[  --with-dnsval-conf=FILE dnsval config file (SYSCONFDIR/dnssec-tools/dnsval.conf).],
    [VAL_CONFIGURATION_FILE=$with_dnsval_conf])
AC_DEFINE_UNQUOTED(VAL_CONFIGURATION_FILE,"$VAL_CONFIGURATION_FILE", [dnsval configuration file])
AC_SUBST(VAL_CONFIGURATION_FILE)
AC_MSG_CACHE_ADD(DNSSEC-Tools configuration file: $VAL_CONFIGURATION_FILE)

VALIDATOR_TESTCASES=$val_sysconfdir/dnssec-tools/validator-testcases
AC_DEFINE_UNQUOTED(VALIDATOR_TESTCASES,"$VALIDATOR_TESTCASES", [validator testcases configuration file])
AC_SUBST(VALIDATOR_TESTCASES)

dnl ----------------------------------------------------------------------
dnl
#
# otherwise prompted information
#
AC_ARG_WITH(defaults,
[
Miscellaneous:
  --with-defaults         Use defaults for prompted values.],
    defaults="yes",defaults="no")
AC_ARG_ENABLE(defaults,,
        AC_MSG_ERROR([ Invalid option. Use --with-defaults/--without-defaults instead ]) )
if test "$defaults" = "yes" ; then
   if test "${with_resolv_conf+set}" != set; then
      unset ac_cv_user_prompt_VAL_RESOLV_CONF
   fi
   if test "${with_root_hints+set}" != set; then
      unset ac_cv_user_prompt_VAL_ROOT_HINTS
   fi
fi

dnl ----------------------------------------------------------------------
dnl
AC_ARG_WITH(cflags,
[  --with-cflags=CFLAGS    use CFLAGS as compile time arguments.],
    [CFLAGS=$with_cflags; export CFLAGS])

case $target_os in
    solaris*)
        AC_MSG_CHECKING([whether we need _REENTRANT for str*_r])
        AC_MSG_RESULT([yes])
        CFLAGS="$CFLAGS -D_REENTRANT"
        ;;
    *)
        ;;
esac


dnl ----------------------------------------------------------------------
dnl
AH_TEMPLATE([LIBVAL_NSEC3], [Define if NSEC3 is required.])
AC_ARG_WITH(nsec3,
[  --with-nsec3            Enable nsec3 support.],
   nsec3="$withval", nsec3="no")
AC_ARG_ENABLE(nsec3,,
        AC_MSG_ERROR([ Invalid option. Use --with-nsec3/--without-nsec3 instead ]) )
if test "$nsec3" = "yes"; then
    AC_DEFINE(LIBVAL_NSEC3, 1)
    AC_MSG_CACHE_ADD(NSEC3 support                  : Yes)
else
    AC_MSG_CACHE_ADD(NSEC3 support                  : No)
fi

dnl ----------------------------------------------------------------------
dnl
AH_TEMPLATE([LIBVAL_DLV], [Define if DLV is required.])
AC_ARG_WITH(dlv,
[  --with-dlv            Enable DLV support.],
   dlv="$withval", dlv="no")
AC_ARG_ENABLE(dlv,,
        AC_MSG_ERROR([ Invalid option. Use --with-dlv/--without-dlv instead ]) )
if test "$dlv" = "yes"; then
    AC_DEFINE(LIBVAL_DLV, 1)
    AC_MSG_CACHE_ADD(DLV support                    : Yes)
else 
    AC_MSG_CACHE_ADD(DLV support                    : No)
fi

dnl ----------------------------------------------------------------------
dnl
AH_TEMPLATE([VAL_IPV6], [Define if IPV6 is available.])
AC_ARG_WITH(ipv6,
[  --with-ipv6             Enable IPv6 support.],
   ipv6="$withval", ipv6="no")
AC_ARG_ENABLE(ipv6,,
        AC_MSG_ERROR([ Invalid option. Use --with-ipv6/--without-ipv6 instead ]) )
if test "$ipv6" = "yes"; then
    AC_DEFINE(VAL_IPV6, 1)
    AC_MSG_CACHE_ADD(IPv6 support                   : Yes)
else
    AC_MSG_CACHE_ADD(IPv6 support                   : No)
fi


dnl ----------------------------------------------------------------------
dnl perl specific arguments
dnl
AC_ARG_WITH(perl-build-args,
[  --with-perl-perl-args=ARGS           Add ARGS to building perl Makefiles.],
	PERLARGS="$withval"
)
AC_SUBST(PERLARGS)

dnl ----------------------------------------------------------------------
dnl openssl
dnl
AC_ARG_WITH(openssl,
[  --with-openssl=PATH     Look for openssl in PATH/{lib,include}.],
    if test "x$withval" != "xyes"; then
      opensslpathset=1
      AC_ADD_SEARCH_PATH($withval)
    fi
)
AC_ARG_ENABLE(openssl,,
        AC_MSG_ERROR([ Invalid option. Use --with-openssl/--without-openssl instead ]) )
AC_ARG_WITH(ssl,,
        AC_MSG_ERROR([ Invalid option. Use --with-openssl/--without-openssl instead ]) )
AC_ARG_ENABLE(ssl,,
        AC_MSG_ERROR([ Invalid option. Use --with-openssl/--without-openssl instead ]) )

dnl openssl defaults to /usr/local/ssl, so add it to the search path.
if test "x$opensslpathset" != "x1"; then
    AC_ADD_SEARCH_PATH(/usr/local/ssl)
fi

AC_CHECK_LIB(crypto, EVP_md5,,
        AC_MSG_ERROR("OpenSSL not found. get it from http://www.openssl.org.")
)

dnl add any libraries that may be dependencies
AC_CHECK_LIB(nsl, inet_ntop)
AC_CHECK_LIB(socket, gai_strerror)

AH_TEMPLATE([HAVE_NSAP_ADDR],
            [Define if libc contains inet_nsap_ntoa.])
AC_CHECK_LIB(c, inet_nsap_ntoa, AC_DEFINE(HAVE_NSAP_ADDR), )
    
AH_TEMPLATE([HAVE_GETHOSTBYNAME2],
            [Define if libc contains gethostbyname2.])
AC_CHECK_LIB(c, gethostbyname2, AC_DEFINE(HAVE_GETHOSTBYNAME2), )

AH_TEMPLATE([HAVE_HSTRERROR],
            [Define if libc contains hstrerror.])
AC_CHECK_LIB(c, hstrerror, AC_DEFINE(HAVE_HSTRERROR), )

AC_CHECK_HEADERS(openssl/bio.h openssl/evp.h)

# error and die if we couldn't find it.
if test "x$ac_cv_lib_crypto_EVP_md5" != "xyes" -o "x$ac_cv_header_openssl_bio_h" != "xyes" -o "x$ac_cv_header_openssl_evp_h" != "xyes"; then
	AC_MSG_ERROR("OpenSSL not found. get it from http://www.openssl.org.")
fi

dnl ----------------------------------------------------------------------
AC_ARG_WITH(threads,
[  --without-threads       Don't use threads.])

LIBVAL_SUFFIX=""
AH_TEMPLATE([VAL_NO_THREADS],
            [Define if you do not want to use threads.])
if test "x$with_threads" = "xno"; then
    AC_DEFINE(VAL_NO_THREADS, 1)
    AC_MSG_CACHE_ADD(Thread support                 : No)
else

    AC_CHECK_LIB(pthread, pthread_rwlock_init,
        [LIBS="$LIBS -lpthread"
        LIBVAL_SUFFIX="-threads"
         AC_MSG_CACHE_ADD(Thread support                 : Yes)],
        [AC_DEFINE(VAL_NO_THREADS, 1)
         AC_MSG_CACHE_ADD(Thread support                 : No)])
fi
AC_SUBST(LIBVAL_SUFFIX)

dnl ----------------------------------------------------------------------
AC_SUBST(LIBS)

dnl ----------------------------------------------------------------------
AC_MSG_CHECKING([for developer gcc flags])
DEVFLAGS=""
if test -d $srcdir/.svn; then
  # disable --enable-shared by default in cvs/developer cases.
  # don't do anything if option set via cmdline
  if test "${enable_shared+set}" != set; then
    enable_shared=no
  fi

  if test "x$GCC" = "xyes"; then
    DEVFLAGS="-Wall -Winline -Wstrict-prototypes -Wwrite-strings -Wcast-qual -Wno-char-subscripts"
  fi
fi
AC_MSG_RESULT($DEVFLAGS)
AC_SUBST(DEVFLAGS)
AC_MSG_CACHE_ADD(Developer flags                : $DEVFLAGS)

dnl ----------------------------------------------------------------------
AC_CHECK_HEADERS(sys/filio.h getopt.h netinet/in.h)
AC_CHECK_DECLS([getopt_long_only, getopt_long],,,[
#include <unistd.h>
#if HAVE_GETOPT_H
#include <getopt.h>
#endif
])

dnl ----------------------------------------------------------------------
AC_CHECK_HEADERS(arpa/nameser.h arpa/nameser_compat.h)

AC_CACHE_CHECK(for struct HEADER in arpa/nameser.h, ac_cv_nameser_has_header,
[AC_EGREP_CPP(HEADER, [
#include <arpa/nameser.h>
],  ac_cv_nameser_has_header="yes", ac_cv_nameser_has_header="no")])
if test "x$ac_cv_nameser_has_header" = "xyes" ; then
  AC_DEFINE([NAMESER_HAS_HEADER], 1, [Define if <arpa/nameser.h> has HEADER. ])
fi

AC_CHECK_STRUCT_FOR([
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
], __ns_msg, _msg_ptr, no)
AH_TEMPLATE([STRUCT___NS_MSG_HAS__MSG_PTR],
            [Define if struct __ns_msg had _msg_ptr.])

AC_CHECK_STRUCT_FOR([
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
], __ns_msg, _ptr, no)
AH_TEMPLATE([STRUCT___NS_MSG_HAS__PTR],
            [Define if struct __ns_msg had _ptr.])

dnl ----------------------------------------------------------------------
dnl check for non-portable functions 
dnl
AC_CHECK_FUNCS(strerror_r)

dnl ---------------------------------------------------------------------- 
AC_CHECK_TYPES([ns_cert_types],,,[
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
])

dnl check for varios ns_* decls (record types or functions)
AC_CHECK_DECLS([ns_t_a,ns_t_kx,ns_r_badsig,ns_parse_ttl,ns_name_pton,ns_name_unpack,ns_name_ntop,ns_samename],,,[
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
])
AH_BOTTOM([
/*
 * OpenBSD has t_*, but not ns_t_*
 */
#if ! HAVE_DECL_NS_T_A
#include "val_ns_types.h"
#endif

/*
 * FreeBSD is missing ns_t_kx, ns_t_cert, ns_t_a6, ns_t_dname, ns_t_sink, ns_t_tsig, ns_t_zxfr
 * for now, assume if the first is missing, the rest are too. If we hit system that has some
 * but not others, tweak accordingly.
 */
#if defined HAVE_DECL_NS_T_KX && !HAVE_DECL_NS_T_KX
#define ns_t_kx      36  /* Key Exchange */
#define ns_t_cert    37  /* Certification record */
#define ns_t_a6      38  /* IPv6 address (deprecates AAAA) */
#define ns_t_dname   39  /* Non-terminal DNAME (for IPv6) */
#define ns_t_sink    40  /* Kitchen sink (experimentatl) */
#define ns_t_tsig    250 /* Transaction signature. */
#define ns_t_zxfr    256 /* BIND-specific, nonstandard. */
#endif /* HAVE_NS_T_KX */

/*
 * FreeBSD is missing ns_r_badsig, ns_r_badkey, ns_r_badtime
 * for now, assume if the first is missing, the rest are too. If we hit system that has some
 * but not others, tweak accordingly.
 */
#if defined HAVE_DECL_NS_R_BADSIG && !HAVE_DECL_NS_R_BADSIG
#define ns_r_badsig      16
#define ns_r_badkey      17
#define ns_r_badtime     18
#endif /* HAVE_NS_R_BADSIG */
])

AC_CHECK_DECLS([p_rcode,p_section],,,[
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#include <resolv.h>
])


dnl ----------------------------------------------------------------------
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_TYPES([int8_t, uint8_t, u_int8_t])
AC_CHECK_TYPES([int16_t, uint16_t, u_int16_t])
AC_CHECK_TYPES([int32_t, uint32_t, u_int32_t])

AH_BOTTOM([
#define MAX_TEST_RESULTS 10

#ifdef HAVE_INTTYPES_H
#include <inttypes.h>
#endif
/* define u_int32_t if not available */
#ifndef HAVE_U_INT32_T
#ifdef HAVE_UINT32_T
typedef uint32_t        u_int32_t;
#else
#ifdef INT32_T
typedef unsigned INT32_T u_int32_t;
#else
typedef unsigned int     u_int32_t;
#endif
#endif
#endif /* !HAVE_U_INT32_T */

/* define u_int16_t if not available */
#ifndef HAVE_U_INT16_T
#ifdef HAVE_UINT16_T
typedef uint16_t        u_int16_t;
#else
#ifdef INT16_T
typedef unsigned INT16_T u_int16_t;
#else
typedef unsigned short     u_int16_t;
#endif
#endif
#endif /* !HAVE_U_INT16_T */]

/* define u_int8_t if not available */
#ifndef HAVE_U_INT8_T
#ifdef HAVE_UINT8_T
typedef uint8_t        u_int8_t;
#else
#ifdef INT8_T
typedef unsigned INT8_T u_int8_t;
#else
typedef unsigned short     u_int8_t;
#endif
#endif
#endif /* !HAVE_U_INT8_T */])

dnl ----------------------------------------------------------------------

case "$host" in
 *-*-sunos4*)
    AC_DEFINE(SPRINTF_CHAR, 1, [*s*printf() functions are char*])
    ;;
esac

dnl ----------------------------------------------------------------------

if test "x$ac_cv_user_prompt_VAL_RESOLV_CONF" = "x" -o "x$ac_cv_user_prompt_VAL_ROOT_HINTS" = "x" ; then
   AC_CACHE_CHECK(if you have run configure before, ac_cv_have_warned,
   [
   if test "x$defaults" = "xno"; then
cat << EOF

         ************** Configuration Section **************

        You are about to be prompted with a series of questions.  Answer
them carefully, as they determine how the validator library and related
applications are to function.

        After the configure script finishes, you can browse the newly
created include/validator-config.h file for further - less important - parameters
to modify.  Be careful if you re-run configure though, since the file
will be overwritten.

-Press return to continue-
EOF

      read tmpinput
      ac_cv_have_warned="yes"
      echo $ECHO_N "disabling above prompt for future runs...  $ECHO_C"
   else
     ac_cv_have_warned="no"
   fi
   ])
else
  ac_cv_have_warned="yes"
fi

AC_PROMPT_USER(VAL_RESOLV_CONF,[

***  Resolver configuration location:

    Enter the location for the resolver configuration file. If your
existing resolver configuration (typically /etc/resolv.conf) contains
DNSSEC-aware resolvers, you may specify that file. This has the benefit
of only having to remember to update a single file if your resolver
configuration changes.

    If you do not wish to modify your default resolver configuration
for any reason (e.g. you are using fast/close non-dnssec aware resolvers
and don't want to impact existing applications), you may use the default,
DNSSEC-Tools specific, location.

    Providing a file via the --with-resolv-conf argument to configure will
avoid this prompt.

Location to read resolver configuration],$val_sysconfdir/dnssec-tools/resolv.conf,quoted)
VAL_RESOLV_CONF=$ac_cv_user_prompt_VAL_RESOLV_CONF
AC_SUBST(VAL_RESOLV_CONF)
AC_MSG_CACHE_ADD(libval resolver configuration  : $VAL_RESOLV_CONF)

default_hints="$val_sysconfdir/dnssec-tools/root.hints"
if test "x$defaults" != "xyes" ; then
   search_dirs="$val_sysconfdir/dnssec-tools $prefix/var/named $prefix/var/named/etc/named $val_sysconfdir/named $val_sysconfdir"
   if test "x$prefix" != "x" ; then
      search_dirs="$search_dirs /var/named /var/named/etc/named /etc/named /etc"
   fi
   for dir in $search_dirs ;
   do
      for file in named.ca named.root named.cache db.cache root.hints ;
      do
         if test -r "$dir/$file" ; then
            default_hints="$dir/$file"
            break 2
         fi
      done
   done
fi
AC_PROMPT_USER(VAL_ROOT_HINTS,[

*** Root hints location:

    Enter the location of the root hints file, or 'none' to install
and use the copy provided with DNSSEC-Tool (see validator/etc/root.hints).

    Providing a file via the --with-root-hints argument to configure will
avoid this prompt.

Location to read root hints configuration],$default_hints,quoted)
if test "$ac_cv_user_prompt_VAL_ROOT_HINTS" = "none" ; then
   ac_cv_user_prompt_VAL_ROOT_HINTS="$val_sysconfdir/dnssec-tools/root.hints"
fi
VAL_ROOT_HINTS=$ac_cv_user_prompt_VAL_ROOT_HINTS
AC_SUBST(VAL_ROOT_HINTS)
AC_MSG_CACHE_ADD(libval root hints              : $VAL_ROOT_HINTS)
  

dnl ----------------------------------------------------------------------

AC_CONFIG_FILES([
 Makefile:Makefile.top:Makefile.in
 libsres/Makefile:Makefile.top:libsres/Makefile.in:Makefile.bot
 libval/Makefile:Makefile.top:libval/Makefile.in:Makefile.bot
 doc/Makefile:Makefile.top:doc/Makefile.in:Makefile.bot
 apps/Makefile:Makefile.top:apps/Makefile.in:Makefile.bot
])
AC_CONFIG_FILES([libval-config:libval-config.in], [chmod +x libval-config])
AC_CONFIG_COMMANDS([default], echo timestamp > stamp-h)
AC_OUTPUT
AC_MSG_CACHE_DISPLAY()
