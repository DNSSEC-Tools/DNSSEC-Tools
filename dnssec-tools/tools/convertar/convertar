#!/usr/bin/perl

use Net::DNS::SEC::Tools::conf;
use Net::DNS::SEC::Tools::TrustAnchor;
use Net::DNS::SEC::Tools::QWPrimitives;
use strict;

my %opts;

#
# Perform some housekeeping if we're running packed.
#	- use the packed DNSSEC-Tools config file
#	- make sure the packed ParserDetails.ini file is where XML::SAX expects
#
if (runpacked()) {

    #
    # Use the packed config file.
    #
    setconffile("$ENV{'PAR_TEMP'}/inc/dnssec-tools.conf");

    #
    # Move the ParserDetails.ini file to its required location.
    #
    if (! -e "$ENV{'PAR_TEMP'}/SAX") {
	use Cwd;

	my $cwd = getcwd;

	chdir($ENV{'PAR_TEMP'});

	if (-e "inc/SAX") {
	    rename("inc/SAX", "SAX");
	}

	chdir($cwd);
    }
}


DTGetOptions(\%opts,
	     ["i|input-file=s",  "Input file(s)"],
	     ["o|output-file=s", "Output file(s)"],
	    ) || exit 1;

my $input_file = $opts{'i'} || shift @ARGV;
my $output_file = $opts{'o'} || shift @ARGV;

my ($mod, $file, $options) = parse_component($input_file);

my $tar = $mod->read();
die "reading tar from $input_file failed\n" if (!$tar);

if ($output_file ne '') {
    my ($mod, $file, $options) = parse_component($output_file);
    return if (!$mod);
    $mod->write($tar, $file);
}
