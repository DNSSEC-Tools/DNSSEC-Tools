#!/usr/bin/perl

use Net::DNS;
use Net::DNS::SEC;
use Data::Dumper;

my %opts =
  ( 'a' => 'SHA256'
  );

LocalGetOptions(\%opts,
		['GUI:VERSION',"0.1\nDNSSEC-Tools Version: 1.4"],

		['a|hash-algorithm=s',
		 'Hash algorithm to use (SHA256 or SHA1)'],
		['z|print-zsks',     'Print ZSK DS records too, not just KSKS'],

		['GUI:otherargs_text',"DOMAIN_NAME"],
	       ) || exit;

# query the DNSKEY from the net
my $res  = Net::DNS::Resolver->new;
my $q = $res->query($ARGV[0], "DNSKEY");
my @keys = $q->answer;

#
# for each of the keys found, print out the DS record
#
foreach my $key (@keys) {
    next if (($key->flags & 0x1) == 0);  # KSKs only
    $key->{'name'} = $ARGV[0];

    my $ds = create Net::DNS::RR::DS($key,
				     digtype => $opts{'a'},
				    );
    $ds->print;
}

#######################################################################
# Getopt::GUI::Long safe calling in case it doesn't exist on the system
#
sub LocalGetOptions {
    if (eval {require Getopt::GUI::Long;}) {
	require Getopt::Long;
	import Getopt::GUI::Long;
	Getopt::GUI::Long::Configure(qw(display_help no_ignore_case));
	return GetOptions(@_);
    }
    require Getopt::Long;
    import Getopt::Long;
    Getopt::Long::Configure(qw(auto_help no_ignore_case));
    GetOptions(LocalOptionsMap(@_));
}

sub LocalOptionsMap {
    my ($st, $cb, @opts) = ((ref($_[0]) eq 'HASH') 
			    ? (1, 1, $_[0]) : (0, 2));
    for (my $i = $st; $i <= $#_; $i += $cb) {
	if ($_[$i]) {
	    next if (ref($_[$i]) eq 'ARRAY' && $_[$i][0] =~ /^GUI:/);
	    push @opts, ((ref($_[$i]) eq 'ARRAY') ? $_[$i][0] : $_[$i]);
	    push @opts, $_[$i+1] if ($cb == 2);
	}
    }
    return @opts;
}

=head1 NAME

getds - Create a DS record from DNSKEYing information

=head1 SYNOPSIS

getds dnssec-tools.org

=head1 DESCRIPTION

B<getds> will create a DS record from DNSKEYs for a particular DNS
domain.  It does this by converting DNSKEYs to DS records using the
specified hashing algorithm.  The results can then be passed to
upstream DNSSEC supporting parents or to DLV registries.

=head1 SECURITY CONSIDERATIONS

By default, getds pulls data from the live DNS.  If you DNS resolver
isn't configured so that this is pulled securely, then the results
can't be trusted.

=cut

