#!/usr/bin/perl
#
# Copyright 2006 SPARTA, Inc.  All rights reserved.  See the COPYING
# file distributed with this software for details
#
#
# rrinit
#
#	This script creates a rollrec file.
#

use strict;

use Getopt::Long;

use Net::DNS::SEC::Tools::rollrec;
use Net::DNS::SEC::Tools::tooloptions;

#######################################################################

#
# Data required for command line options.
#
my %options = ();			# Filled option array.
my @opts =
(
	"zone=s",			# Zone file.
	"keyrec=s",			# Keyrec file.
	"out=s",			# Output file.
	"skip",				# Skip record flag.
	"help",				# Give a usage message and exit.
);

#
# Flag values for the various options.  Variable/option connection should
# be obvious.
#
my $zoneopt;
my $kropt;
my $outfile;
my $skipopt = 0;

my $argc;				# Number of command line arguments.
my $noopts = 0;				# No-options flag.

#######################################################################

my $ret;				# Return code from main().

$ret = main();
exit($ret);

#-----------------------------------------------------------------------------
#
# Routine:	main()
#
sub main()
{

	#
	# Check our options.
	#
	doopts();

	#
	# Set up the output file.
	#
	setout();

	#
	# Generate a rollrec record for each of the non-option command-line
	# arguments.
	#
	foreach my $zone (@ARGV)
	{
		newrollrec($zone);
	}

	return(0);
}

#-----------------------------------------------------------------------------
#
# Routine:	doopts()
#
# Purpose:	This routine shakes and bakes our command line options.
#		A bunch of option variables are set according to the specified
#		options.  Then a little massaging is done to make sure that
#		the proper actions are taken.
#
sub doopts
{
	#
	# Parse the options.
	#
	GetOptions(\%options,@opts);

	#
	# Set our option variables based on the parsed options.
	#
	$zoneopt = $options{'zone'}	|| "";
	$kropt	 = $options{'keyrec'}	|| "";
	$outfile = $options{'out'}	|| "";
	$skipopt = $options{'skip'}	|| 0;

	if(($zoneopt eq "") && ($kropt eq ""))
	{
		$noopts = 1;
	}

	#
	# Give a usage flag if asked.
	#
	usage() if(defined($options{'help'}));

	#
	# Ensure we were given a zone name.
	#
	$argc = @ARGV;
	usage() if($argc == 0);

}

#-----------------------------------------------------------------------------
#
# Routine:	setout()
#
# Purpose:	Set up the output file descriptor.  If the -out option wasn't
#		given, then we'll just write to the caller's tty.
#
sub setout
{
	$outfile = "/dev/tty" if($outfile eq "");

	open(OUT,">> $outfile");
}

#-----------------------------------------------------------------------------
#
# Routine:	newrollrec()
#
# Purpose:	This generates and prints a rollrec record.  It figures out
#		whether to give a roll or skip record.  It also figures out
#		how to use the command-line options in forming the zonefile
#		and keyrec fields for the rollrec.
#
sub newrollrec
{
	my $zone = shift;				# Zone name.

	my $rectype  = "roll";				# Record's type.
	my $zonefile = "$zone.signed";			# Zone file.
	my $krfile   = "$zone.krf";			# Keyrec file.

	#
	# Make a skip record if -skip was given.
	#
	$rectype = "skip" if($skipopt);

	#
	# Figure out what to do with any options we were given.
	#
	if(!$noopts)
	{
		#
		# If multiple zones were given on the command line, we'll use
		# the options as a template, converting any equals signs to
		# the zone name.
		# If only one zone was given on the command line, we'll use
		# the options as-is.
		#
		if($argc > 1)
		{
			if($zoneopt)
			{
				$zonefile = $zoneopt;
				$zonefile =~ s/=/$zone/;
			}

			if($kropt)
			{
				$krfile = $kropt;
				$krfile =~ s/=/$zone/;
			}
		}
		else
		{
			$zonefile = $zoneopt if($zoneopt);
			$krfile	  = $kropt   if($kropt);
		}
	}

	print OUT "$rectype	\"$zone\"\n";
	print OUT "	zonefile	\"$zonefile\"\n";
	print OUT "	keyrec		\"$krfile\"\n";
	print OUT "	curphase	\"-1\"\n";
	print OUT "	maxttl		\"0\"\n";
	print OUT "	phasestart	\"new\"\n";
	print OUT "\n";
}

#-----------------------------------------------------------------------------
#
# Routine:	usage()
#
sub usage
{
	print STDERR "usage:  rrinit [options] <zonename1> ... <zonenameN>\n";
	print STDERR "\t-zone		zone file\n";
	print STDERR "\t-keyrec		keyrec file\n";
	print STDERR "\t-skip		skip records\n";
	print STDERR "\t-out		output file\n";
	print STDERR "\t-help		help message \n";
	exit(0);
}

1;

##############################################################################
#

=pod

=head1 NAME

rrinit - List the I<rollrec>s in a DNSSEC-Tools I<rollrec> file.

=head1 SYNOPSIS

  rrinit [options] <zonename1> ... <zonenameN>

=head1 DESCRIPTION

I<rrinit> creates new I<rollrec> entries for a I<rollrec> file.  This
I<rollrec> file will be used by I<rollerd> to manage key roll-over for
the named domains.

A I<rollrec> entry has this format:

    roll "example.com"
	zonefile	"example.com.signed"
	keyrec		"example.com.krf"
	curphase	"1"
	maxttl		"3600"
	phasestart	"Mon Jan 9 16:00:00 2006"

The I<zonefile> and I<keyrec> fields are set according to command-line options
and arguments.  The manner of generating the I<rollrec>'s actual values is a
little complex and is described in the ZONEFILE AND KEYREC FIELDS section below.
The I<curphase> field is set to -1 to indicate that the entry is now.
The I<maxttl> and I<phasestart> fields are set to dummy values.

The keywords B<roll> and B<skip> indicate whether I<rollerd> should process
or ignore a particular I<rollrec> entry.  B<roll> records are created by
default; B<skip> entries are created if the I<-skip> option is specified.

The newly generated I<rollrec> entries are written to standard output,
unless the I<-out> option is specified.

=head1 ZONEFILE AND KEYREC FIELDS

The I<zonefile> and I<keyrec> fields may be given by using the I<-zone>
and I<-keyrec> options, or default values may be used.

The default values use the I<rollrec>'s zone name, taken from the command
line, as a base.  B<.signed> is appended to the domain name for the zone file;
B<.krf> is appended to the domain name for the I<keyrec> file.

If I<-zone> or I<-keyrec> are specified, then the options values given are
used in one of two ways:

=over 4

=item 1.  A single domain name is given on the command line.

The option values for I<-zone> and/or I<-keyrec> are used for the actual
I<rollrec> fields.

=item 2.  Multiple domain names are given on the command line.

The option values for I<-zone> and/or I<-keyrec> are used as templates
for the actual I<rollrec> fields.  The option values must contain 
the string B<=>.  This string is replaced by the domain whose I<rollrec>
is being created.

=back

See the EXAMPLES section for examples of how options are used by I<rrinit>.

=head1 OPTIONS

I<rrinit> may be given the following options:

=over 4

=item  I<-zone E<lt>zonefileE<gt>>

This specifies the value of the I<zonefile> field.
See the ZONEFILE AND KEYREC FIELDS and EXAMPLES sections for more details.

=item  I<-keyrec E<lt>keyrec-fileE<gt>>

This specifies the value of the I<keyrec> field.
See the ZONEFILE AND KEYREC FIELDS and EXAMPLES sections for more details.

=item  I<-skip>

By default, I<roll> records are generated.  If this option is given, then
I<skip> records will be generated instead.

=item  I<-out E<lt>output-fileE<gt>>

The new I<rollrec> entries will be appended to I<E<lt>output-fileE<gt>>.
The file will be created if it does not exist.

If this option is not given, the new I<rollrec> entries will be written
to standard output.

=item -help

Display a usage message.

=back

=head1 EXAMPLES

The following options should make clear how I<rrinit> deals with options and
the new I<rollrec>s.  Example 1 will show the complete new I<rollrec> record.
For the sake of brevity, the remaining examples will only show the newly
created I<zonefile> and I<keyrec> records.

=head2 Example 1.  One domain, no options

This example shows the I<rollrec> generated by giving I<rrinit> a single
domain, without any options.

    $ rrinit example.com
	roll    "example.com"
	    zonefile        "example.com.signed"
	    keyrec          "example.com.krf"
	    curphase        "-1"
	    maxttl          "0"
	    phasestart      "new"

=head2 Example 2.  One domain, -zone option

This example shows the I<rollrec> generated by giving I<rrinit> a single
domain, with the I<-zone> option.

    $ rrinit -zone signed-example example.com
	roll    "example.com"
	    zonefile        "signed-example"
	    keyrec          "example.com.krf"

=head2 Example 3.  One domain, -keyrec option

This example shows the I<rollrec> generated by giving I<rrinit> a single
domain, with the I<-keyrec> option.

    $ rrinit -keyrec example.com
	roll    "example.com"
	    zonefile        "example.com.signed"
	    keyrec          "xkrf"

=head2 Example 4.  One domain, -zone and -keyrec options

This example shows the I<rollrec> generated by giving I<rrinit> a single
domain, with the I<-zone> and I<-keyrec> options.

    $ rrinit -zone signed-example -keyrec example.com
	roll    "example.com"
	    zonefile        "signed-example"
	    keyrec          "xkrf"

=head2 Example 5.  One domain, -skip option

This example shows the I<rollrec> generated by giving I<rrinit> a single
domain, with the I<-zone> and I<-keyrec> options.

    $ rrinit -skip example.com
	skip    "example.com"
	    zonefile        "example.com.signed"
	    keyrec          "example.com.krf"

=head2 Example 6.  Multiple domains, no options

This example shows the I<rollrec>s generated by giving I<rrinit> several
domains, without any options.

    $ rrinit example1.com example2.com
	roll    "example1.com"
		zonefile        "example1.com.signed"
		keyrec          "example1.com.krf"

	roll    "example2.com"
		zonefile        "example2.com.signed"
		keyrec          "example2.com.krf"

=head2 Example 7.  Multiple domains, -zone option

This example shows the I<rollrec>s generated by giving I<rrinit> several
domains, with the I<-zone> option.

    $ rrinit -zone =-signed example1.com example2.com
	roll    "example1.com"
		zonefile        "example1.com-signed"
		keyrec          "example1.com.krf"

	roll    "example2.com"
		zonefile        "example2.com-signed"
		keyrec          "example2.com.krf"

=head2 Example 8.  Multiple domains, -keyrec option

This example shows the I<rollrec>s generated by giving I<rrinit> several
domains, with the I<-keyrec> option.

    $ rrinit -keyrec zone-=-keyrec example1.com example2.com
	roll    "example1.com"
		zonefile        "example1.com.signed"
		keyrec          "zone-example1.com-keyrec"

	roll    "example2.com"
		zonefile        "example2.com.signed"
		keyrec          "zone-example2.com-keyrec"

=head2 Example 9.  Multiple domains, -zone and -keyrec options

This example shows the I<rollrec>s generated by giving I<rrinit> several
domains, with the I<-zone> and I<-keyrec> options.

    $ rrinit -zone Z-= -keyrec =K example1.com example2.com
	roll    "example1.com"
		zonefile        "Z-example1.com"
		keyrec          "example1.comK"

	roll    "example2.com"
		zonefile        "Z-example2.com"
		keyrec          "example2.comK"

=head2 Example 10.  Single domain, -zone and -keyrec options with template

This example shows the I<rollrec>s generated by giving I<rrinit> a single
domain, with the I<-zone> and I<-keyrec> options.  The options use the
multi-domain B<=> template.

    $ rrinit -zone Z-= -keyrec =.K example.com
	roll    "example.com"
		zonefile        "Z-="
		keyrec          "=.K"

This is probably not what is wanted, since it results in the I<zonefile> and
I<keyrec> field values containing the B<=>.

=head2 Example 11.  Multiple domains, -zone and -keyrec options without template

This example shows the I<rollrec>s generated by giving I<rrinit> several
domains, with the I<-zone> and I<-keyrec> options.  The options do not use the
multi-domain B<=> template.

    $ rrinit example1.com example2.com
	roll    "example1.com"
		zonefile        "exzone"
		keyrec          "exkr"

	roll    "example2.com"
		zonefile        "exzone"
		keyrec          "exkr"

This is may not be what is wanted, since it results in the same I<zonefile>
and I<keyrec> fields values for each I<rollrec>.

=head1 COPYRIGHT

Copyright 2006 SPARTA, Inc.  All rights reserved.
See the COPYING file included with the DNSSEC-Tools package for details.

=head1 AUTHOR

Wayne Morrison, tewok@users.sourceforge.net

=head1 SEE ALSO

B<Net::DNS::SEC::Tools::keyrec.pm(3)>,
B<Net::DNS::SEC::Tools::rollrec.pm(3)>

B<lsrr(8)>, B<rollerd(8)>, B<rrchk(8)>

=cut
