#!/usr/bin/perl

use strict;

my $detail = $ENV{'LOGWATCH_DETAIL_LEVEL'};
my $daterange = $ENV{'LOGWATCH_DATE_RANGE'};
my $tempdir = $ENV{'LOGWATCH_TEMP_DIR'};
my $debuglevel = $ENV{'LOGWATCH_DEBUG'};

my $valFail;
my $valOK;
my $attPosRespVal;
my $attNegRespVal;
my $attInsecurityProof;
my $insecurityProofFail;
my $rdataFail;
my $rdataSuccess;
my $markingAsSecure;
my $nonExtProof;
my $noValidSig;

while (defined(my $ThisLine = <STDIN>)) {
   if ($ThisLine =~ /validation failed/) {
      $valFail++;
   } elsif ($ThisLine =~ /validation OK/) {
      $valOK++;
   } elsif ($ThisLine =~ /attempting positive response validation/) {
      $attPosRespVal++;
   } elsif ($ThisLine =~ /attempting negative response validation/) {
      $attNegRespVal++;
   } elsif ($ThisLine =~ /attempting insecurity proof/) {
      $attInsecurityProof++;
   } elsif ($ThisLine =~ /insecurity proof failed/) {
      $insecurityProofFail++;
   } elsif ($ThisLine =~ /verify rdataset: RRSIG failed to verify/) {
      $rdataFail++;
   } elsif ($ThisLine =~ /verify rdataset: success/) {
      $rdataSuccess++;
   } elsif ($ThisLine =~ /marking as/) {
      $markingAsSecure++;
   } elsif ($ThisLine =~ /nonexistence proof found/) {
      $nonExtProof++;
   } elsif ($ThisLine =~ /no valid signature found/) {
      $noValidSig++;
   }
}

if ($noValidSig > 0) {
   print "No Valid Signature received " . $noValidSig . " times\n";
}

my %msgHash = ();
if ($detail >= 5) {
   print "\nDetail >= 5 log messages:\n";
   if ($markingAsSecure > 0) {
      $msgHash{"Marking as secure"} = $markingAsSecure;
   }
   if ($rdataSuccess > 0) {
      $msgHash{"Verified rdataset succeeded"} = $rdataSuccess;
   }
   if ($rdataFail > 0) {
      $msgHash{"Verified rdataset failed"} = $rdataFail;
   }
   if ($insecurityProofFail > 0) {
      $msgHash{"Insecurity proof failed"} = $insecurityProofFail;
   }
   if ($attInsecurityProof > 0) {
      $msgHash{"Insecurity proof attempted"} = $attInsecurityProof;
   }
   if ($valFail > 0) {
      $msgHash{"Validation failed"} = $valFail;
   }
   if ($valOK > 0) {
      $msgHash{"Validation OK"} = $valOK;
   }
   if ($attPosRespVal > 0) {
      $msgHash{"Attempted positive response validation"} = $attPosRespVal;
   }
   if ($attNegRespVal > 0) {
      $msgHash{"Attempted negative response validation"} = $attNegRespVal;
   }
   if ($nonExtProof > 0) {
      $msgHash{"Nonexistence proof found"} = $nonExtProof;
   }

# sort all the non-zero message types and print them in descending order
# of number of occurrences

   my $key;
   foreach $key (sort { $msgHash{$b} <=> $msgHash{$a} } keys %msgHash) {
      print "   " . $key . " " . $msgHash{$key} . " times\n";
   }
}


exit (0);

# vi: shiftwidth=3 tabstop=3 et

