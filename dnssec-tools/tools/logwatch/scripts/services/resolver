#!/usr/bin/perl

#############################################################################
#Copyright (c) 2004, SPARTA, Inc
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are met:
# 
#*  Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# 
#*  Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
#*  Neither the name of SPARTA, Inc nor the names of its contributors may
#   be used to endorse or promote products derived from this software
#   without specific prior written permission.
# 
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
#IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
#CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#############################################################################

#############################################################################
# These scripts were created as part of the DNSSEC-Tools project.
# For more information, see http://sourceforge.net/dnssec-tools.
# Detailed instructions for setting up BIND 9.3.* to use these logwatch
# configuration files and scripts are containted in the README file
# on sourceforge.
#############################################################################

use strict;

my $detail = $ENV{'LOGWATCH_DETAIL_LEVEL'};
my $daterange = $ENV{'LOGWATCH_DATE_RANGE'};
my $tempdir = $ENV{'LOGWATCH_TEMP_DIR'};
my $debuglevel = $ENV{'LOGWATCH_DEBUG'};

my $valComplete;
my $valOK;
my $nonextValOK;

while (defined(my $ThisLine = <STDIN>)) {
   if ($ThisLine =~ /validation completion event/) {
      $valComplete++;
   } elsif ($ThisLine =~ /nonexistence validation OK/) {
      $nonextValOK++;
   } elsif ($ThisLine =~ /validation OK/) {
      $valOK++;
   } 
}

if ($detail >= 5) {
   my %msgHash = ();
   print "\n";
   if ($valComplete > 0) {
      $msgHash{"Received validation completion event "} = $valComplete;
   }
   if ($nonextValOK > 0) {
      $msgHash{"Nonexistence validation OK received "} = $nonextValOK;
   }
   if ($valOK > 0) {
      $msgHash{"Validation OK "} = $valOK;
   }

# sort all the non-zero message types and print them in descending order
# of number of occurrences
   my $key;
   foreach $key (sort { $msgHash{$b} <=> $msgHash{$a} } keys %msgHash) {
      print "   " . $key . " " . $msgHash{$key} . " time(s)\n";
   }
}

exit (0);

# vi: shiftwidth=3 tabstop=3 et

