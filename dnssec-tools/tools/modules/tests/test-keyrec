#!/usr/bin/perl
#
# Copyright 2004 Sparta, inc.  All rights reserved.  See the COPYING
# file distributed with this software for details
#
#
# This script performs several tests of the dnssec-tools keyrec module.
# A test keyrec file is created and parsed.  Various operations are run
# on these data, and their results printed to the screen.  The following
# interfaces are tested:  keyrec_setval(), keyrec_fullrec(), and
# keyrec_recval().  The keyrec_setval() test saves the modified file
# to disk.
#
# These are simple tests in that the results are displayed to the screen
# and the tester is left the responsibility of ensuring that all worked
# as expected.  Automatic testing would be great, and it may come RSN.
#

use strict;

use DNSSEC::keyrec;

create_keyrecfile();

my $keyrecs;
$keyrecs = keyrec_read("portrigh.keyrec");
# print "keyrecs - $keyrecs\n";


test_keyrec_fullrec();

test_keyrec_recval();

test_keyrec_setval();

exit 0;

############################################################################

sub test_keyrec_fullrec
{
	my @krnames = keyrec_names();
	my $nind = @krnames;

	print "\n-----------------------------------------------------\n\n";
	print "testing keyrec_fullrec()\n\n";

	for(my $ind=0;$ind<$nind;$ind++)
	{
		print "$ind:  $krnames[$ind]\n";
		my $val = keyrec_fullrec($krnames[$ind]);
		my %sval = %$val;
		foreach my $k (sort(keys(%sval)))
		{
			print "\t<$k>\t<$sval{$k}>\n";
		}
		print "\n";
	}
}

############################################################################

sub test_keyrec_recval
{
	print "\n-----------------------------------------------------\n\n";
	print "testing keyrec_recval()\n\n";

	getit("portrigh.com","zonefile");
	getit("portrigh.com","kskpath");
	getit("portrigh.com","endtime");
	getit("Kportrigh.com.+005+26000","zonename");
	getit("Kportrigh.com.+005+26000","algorithm");
	getit("Kportrigh.com.+005+52000","zonename");
	getit("Kportrigh.com.+005+52000","random");
	getit("Kportrigh.com.+005+88888","zonename");
	print "\n";
}

############################################################################

sub test_keyrec_setval
{
	print "\n-----------------------------------------------------\n\n";
	print "testing keyrec_setval()\n\n";

	# keyrec_dump_hash();	print "\n";
	# keyrec_dump_array();		print "\n";

	keyrec_setval("key","Kportrigh.com.+005+12345","keyrec_type","ksk");
	keyrec_setval("zone","portrigh.com","zonefile","db.portrigh.com");
	keyrec_setval("zone","portrigh.com","endtime","+8888000");
	keyrec_setval("zone","portrigh.com","kskpath","keys.ksk/Kportrigh.com.+005+44000");
	keyrec_setval("zone","portrigh.com","zskpath","keys.zsk/Kportrigh.com.+005+88000");
	keyrec_setval("zone","portrigh.com","endtime","+8888888");

	# keyrec_dump_array();		print "\n";
	# keyrec_dump_hash();	print "\n";

	keyrec_close();
}

############################################################################

sub getit
{
	my $p1 = shift;
	my $p2 = shift;
	my $val = keyrec_recval($p1,$p2);

	if($val eq "")
	{
		print "$p1/$p2 - empty\n";
	}
	elsif(!defined($val))
	{
		print "$p1/$p2 - not defined\n";
	}
	else
	{
		print "$p1/$p2 - <$val>\n";
	}
}

############################################################################
#
# These data are in the portrigh.keyrec file used in this test.

sub create_keyrecfile
{
	open(KRF,"> portrigh.keyrec");
	print KRF <<EOF;
#
# key management database
#

zone "portrigh.com"
	zonefile	"db.portrigh.com"
	kskkey		"Kportrigh.com.+005+26000.key"
	kskpath		"./Kportrigh.com.+005+26000.key"
	zskkey		"Kportrigh.com.+005+52000.key"
	zskpath		"./Kportrigh.com.+005+52000.key"
	endtime		"+2592000"		# good for 30 days
	keyrec_signsecs	"1101183759"
	keyrec_signdate	"Tue Nov 23 04:22:39 2004"

key "Kportrigh.com.+005+26000"
	zonename	"portrigh.com"
	keyrec_type	"ksk"
	algorithm	"rsasha1"
	ksklength	"1024"
	random		"-r /dev/urandom"
	keyrec_gensecs	"1101183759"
	keyrec_gendate	"Tue Nov 23 04:22:39 2004"

key "Kportrigh.com.+005+52000"
	zonename	"portrigh.com"
	keyrec_type	"zsk"
	algorithm	"rsasha1"
	zsklength	"512"
	random		"-r /dev/urandom"
	keyrec_gensecs	"1101183759"
	keyrec_gendate	"Tue Nov 23 04:22:39 2004"
EOF

	close(KRF);
}
