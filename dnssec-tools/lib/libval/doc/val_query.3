.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VAL_QUERY 1"
.TH VAL_QUERY 1 "2005-08-25" "perl v5.8.6" "User Contributed Perl Documentation"
.SH "NAME"
val_query, val_x_query \- DNSSEC\-validated resolution of DNS queries
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  #include <validator.h>
.Ve
.PP
.Vb 3
\&  int val_query(const char *domain_name, int class, int type,
\&              unsigned char *answer, int anslen, int flags,
\&              int *dnssec_status);
.Ve
.PP
.Vb 4
\&  int val_x_query(const val_context_t *ctx,
\&                const char *domain_name, int class, int type,
\&                unsigned char *answer, int anslen, int flags,
\&                int *dnssec_status);
.Ve
.PP
.Vb 1
\&  char *p_val_error(int valerrno);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fI\fIval_query()\fI\fR function is a DNSSEC-aware version of \fI\fIres_query\fI\|(3)\fR.
It performs \s-1DNSSEC\s0 validation of \s-1DNS\s0 queries.  The results of the \s-1DNSSEC\s0
validation are returned in the \fIdnssec_status\fR parameter.  The caller must
not pass a \s-1NULL\s0 value for this parameter.
.PP
The \fIflags\fR parameter is reserved for future use, and must be set to 0 at
present.
.PP
If \s-1DNSSEC\s0 validation succeeds, a value of \fB\s-1VALIDATE_SUCCESS\s0\fR is returned in
\&\fIdnssec_status\fR.  Other values are returned in case of errors.  See
\&\fIval_errors.h\fR for a listing of possible error codes.  The \fI\fIp_val_error()\fI\fR
function can be used to return a brief string description of the error code.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
The \fI\fIval_query()\fI\fR function returns the length of the answer if successful,
or \-1 if there was an error.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 4
\& #include <stdio.h>
\& #include <strings.h>
\& #include <arpa/nameser.h>
\& #include <validator.h>
.Ve
.PP
.Vb 1
\& #define BUFLEN 8096
.Ve
.PP
.Vb 7
\& int main(int argc, char *argv[])
\& {
\&          int dnssec_status = ERROR;
\&          int anslen = NETDB_INTERNAL;
\&          int class = ns_c_in;
\&          int type = ns_t_a;
\&          char buf[BUFLEN];
.Ve
.PP
.Vb 1
\&          bzero(buf, BUFLEN);
.Ve
.PP
.Vb 4
\&          if (argc < 2) {
\&                  printf("Usage: %s <domain-name>\en", argv[0]);
\&                  exit(1);
\&          }
.Ve
.PP
.Vb 2
\&          anslen = val_query(argv[1], class, type, buf, BUFLEN,
\&                             0, &dnssec_status);
.Ve
.PP
.Vb 4
\&          if (anslen > 0) {
\&                  printf("DNSSEC Status = %d [%s]\en", dnssec_status,
\&                         p_val_error(dnssec_status));
\&          }
.Ve
.PP
.Vb 2
\&          return 0;
\& }
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2004\-2005 \s-1SPARTA\s0, Inc.  All rights reserved.
See the \s-1COPYING\s0 file included with the DNSSEC-Tools package for details.
.SH "AUTHORS"
.IX Header "AUTHORS"
Abhijit Hayatnagarkar, Suresh Krishnaswamy.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fI\fIres_query\fI\|(3)\fR,
.PP
\&\fI\fIget_context\fI\|(3)\fR, \fI\fIval_getaddrinfo\fI\|(3)\fR, \fI\fIval_gethostbyname\fI\|(3)\fR
.PP
\&\fIp_val_error\fR
.PP
http://dnssec\-tools.sourceforge.net
