=pod

=head1 NAME

val_getaddrinfo, val_x_getaddrinfo, val_get_addrinfo_dnssec_status,
val_dupaddrinfo, val_freeaddrinfo - get DNSSEC-validated network address
and service translation

=head1 SYNOPSIS

  #include <validator.h>

  int val_getaddrinfo(const char *nodename, const char *servname,
                    const struct addrinfo *hints,
                    struct addrinfo **res);

  int val_x_getaddrinfo(struct val_context *ctx,
                    const char *nodename, const char *servname,
                    const struct addrinfo *hints,
                    struct addrinfo **res);

  int val_get_addrinfo_dnssec_status(const struct addrinfo *ainfo);

  struct addrinfo* val_dupaddrinfo(const struct addrinfo *ainfo);

  void val_freeaddrinfo(struct addrinfo *ainfo);

=head1 DESCRIPTION

I<val_getaddrinfo()> is a DNSSEC-aware version of I<getaddrinfo(3)>.  It
performs DNSSEC validation of DNS queries.  It returns a network address value
of type I<addrinfo>.  (See I<getaddrinfo(3)> for more information on
I<addrinfo>.)

I<val_x_getaddrinfo()> performs the same function as I<val_getaddrinfo(), but
is optimized for multiple calls.  The two routines take the same parameters,
but I<val_x_getaddrinfo()> takes an additional parameter I<ctx>, of type
I<val_context>, which passes the validation context for use in call
optimization.  If a B<NULL> value is passed for the I<ctx> parameter, the
default validation context is used.  I<val_getaddrinfo()> is equivalent to
calling I<val_x_getaddrinfo()> with a B<NULL> I<ctx> parameter.

I<val_dupaddrinfo()> duplicates the I<addrinfo> structure and its auxiliary
data.  It performs a deep copy; i.e., the internal strings, arrays, and other
structures are also copied.

I<val_freeaddrinfo()> frees a I<addrinfo> structure, such as those returned
by the I<val_getaddrinfo()>, I<val_x_getaddrinfo()> and I<val_dupaddrinfo()>
functions.

I<val_get_addrinfo_dnssec_status()> extracts the DNSSEC validation status
from the returned I<addrinfo> structure.  This function must be called only
for the values returned from I<val_getaddrinfo()>, I<val_x_getaddrinfo()>,
and I<val_dupaddrinfo()> functions.

=head1 RETURN VALUES

The I<val_getaddrinfo()> and I<val_x_getaddrinfo()> functions return a value
of type I<addrinfo> on success, and B<NULL> on error.  The memory for the
returned value is dynamically allocated by these functions.  Hence, the caller
must only call the I<val_freeaddrinfo()> function on the returned value in
order to avoid memory leaks.

The I<val_get_addrinfo_dnssec_status()> function returns the result of the
DNSSEC validation.  The possible values for the DNSSEC status are given in
B<val_errors.h>.

The I<val_dupaddrinfo()> function returns a copy of the specified I<addrinfo>
structure.  The returned value must be freed using I<val_freeaddrinfo()> to
avoid memory leaks.

=head1 EXAMPLE

 #include <stdio.h>
 #include <validator.h>

 int main(int argc, char *argv[])
 {
          int dnssec_status = ERROR;
          struct addrinfo *ainfo = NULL;

          if (argc < 2) {
                  printf("Usage: %s <hostname>\n", argv[0]);
                  exit(1);
          }
 
          ainfo = val_getaddrinfo(argv[1]);

          if (ainfo) {
                  dnssec_status = val_get_addrinfo_dnssec_status(h);

                  printf("DNSSEC Status = %d [%s]\n", dnssec_status,
                         p_val_error(dnssec_status));
                  val_freeaddrinfo(h);
          }

          return 0;
 }

=head1 COPYRIGHT

Copyright 2004-2005 SPARTA, Inc.  All rights reserved.
See the COPYING file included with the DNSSEC-Tools package for details.

=head1 AUTHORS

Abhijit Hayatnagarkar

=head1 SEE ALSO

I<gethostbyname>(3)

I<p_val_error>, I<val_gethostbyname>, I<val_x_gethostbyname>,
I<val_duphostent>, I<val_freehostent>, I<val_query>, I<val_x_query>

http://dnssec-tools.sourceforge.net

=cut
