=pod

=head1 NAME

val_getaddrinfo, val_get_addrinfo_dnssec_status, val_dupaddrinfo, val_freeaddrinfo 
- get DNSSEC-validated network address and service translation.

=head1 SYNOPSIS

B<#include <val_getaddrinfo.h>>

B<int val_getaddrinfo(const char *>I<nodename>B<, const char *>I<servname>B<,
                    const struct addrinfo *>I<hints>B<,
                    struct addrinfo **>I<res>B<);>

B<int val_x_getaddrinfo(struct val_context *ctx,
                    const char *>I<nodename>B<, const char *>I<servname>B<,
                    const struct addrinfo *>I<hints>B<,
                    struct addrinfo **>I<res>B<);>

B<int val_get_addrinfo_dnssec_status(const struct addrinfo *>I<ainfo>B<);>

B<struct addrinfo* val_dupaddrinfo(const struct addrinfo *>I<ainfo>B<);>

B<void val_freeaddrinfo(struct addrinfo *>I<ainfo>B<);>

=head1 DESCRIPTION

The B<val_getaddrinfo()> function is a DNSSEC-aware version of B<getaddrinfo(3)>.
It performs DNSSEC validation of DNS queries.  It returns a network address
value of type addrinfo.  See B<getaddrinfo(3)> for more information on type addrinfo.
The B<val_x_getaddrinfo()> function takes in an additional parameter I<ctx> of
type val_context, that can be used to pass the validation context.  This provides
optimization over multiple calls to B<val_x_getaddrinfo()>. If a NULL value is
passed for the I<ctx> parameter, the default validation context is used.
B<val_getaddrinfo()> is equivalent to calling B<val_x_getaddrinfo()> with a
NULL I<ctx> parameter.

The B<val_dupaddrinfo()> function provides a way to duplicate the struct addrinfo
value, and its auxiliary data.  It performs a deep copy, i.e. the internal
strings, arrays and other structures are also copied.  The B<val_freeaddrinfo()>
function is used to free the addrinfo structure returned by the B<val_getaddrinfo()>,
B<val_x_getaddrinfo()> and B<val_dupaddrinfo()> functions.

The B<val_get_addrinfo_dnssec_status()> function is used to extract the DNSSEC
validation status from the returned struct addrinfo value.  Note: This function
must be called only for the values returned from B<val_getaddrinfo()>,
B<val_x_getaddrinfo()> or B<val_dupaddrinfo()> functions.

=head1 RETURN VALUE

The B<val_getaddrinfo()> and B<val_x_getaddrinfo()> functions return a value of type
addrinfo, if successful, or NULL if there was an error.  The memory for the returned
value is dynamically allocated by these two functions.  Hence, the caller must make
sure to call the B<val_freeaddrinfo()> function on the returned value, to avoid memory
leaks.

The B<val_get_addrinfo_dnssec_status()> function returns the result of the DNSSEC
validation.  The possible values for the DNSSEC status are given in val_errors.h.

The B<val_dupaddrinfo()> function returns a copy of the addrinfo structure that was
passed to it.  The returned value must be freed using B<val_freeaddrinfo()> to
avoid memory leaks.

=head1 EXAMPLE
 
 #include <stdio.h>
 #include <val_getaddrinfo.h>
 
 int main(int argc, char *argv[])
 {
	int dnssec_status = ERROR;
	struct addrinfo *ainfo = NULL;
 	
	if (argc < 2) {
		printf("Usage: %s <hostname>\n", argv[0]);
		exit(1);
	}
 
	ainfo = val_getaddrinfo(argv[1]);

	if (ainfo) {
		dnssec_status = val_get_addrinfo_dnssec_status(h);

		printf("DNSSEC Status = %d [%s]\n", dnssec_status,
		       p_val_error(dnssec_status));
		val_freeaddrinfo(h);
	}

	return 0;
 }

=head1 NOTES

=head1 COPYRIGHT

Copyright 2004-2005 SPARTA, Inc.  All rights reserved.
See the COPYING file included with the dnssec-tools package for details.

=head1 AUTHORS

Abhijit Hayatnagarkar

=head1 SEE ALSO

B<gethostbyname>(3), B<p_val_error>, B<val_gethostbyname>, B<val_x_gethostbyname>,
B<val_duphostent>, B<val_freehostent>, B<val_query>, B<val_x_query>

http://dnssec-tools.sourceforge.net/

=head1 LAST UPDATED

August 22, 2005

=cut
