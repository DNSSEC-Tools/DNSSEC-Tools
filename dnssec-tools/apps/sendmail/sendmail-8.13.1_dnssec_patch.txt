Index: sendmail/readcf.c
===================================================================
--- sendmail/readcf.c	2005-02-24 15:08:17.103318692 -0500
+++ sendmail/readcf.c	2005-02-24 15:41:28.287520824 -0500
@@ -2577,6 +2577,13 @@
 				WorkAroundBrokenAAAA = !clearmode;
 				continue;
 			}
+#ifdef HAVE_LIBVALIDAT
+			if (sm_strcasecmp(q, "dnssec") == 0)
+			{
+			        DoDNSSECValidation = !clearmode;
+				continue;
+			}
+#endif
 			for (rfp = ResolverFlags; rfp->rf_name != NULL; rfp++)
 			{
 				if (sm_strcasecmp(q, rfp->rf_name) == 0)
@@ -2590,8 +2597,8 @@
 				_res.options |= rfp->rf_bits;
 		}
 		if (tTd(8, 2))
-			sm_dprintf("_res.options = %x, HasWildcardMX = %d\n",
-				   (unsigned int) _res.options, HasWildcardMX);
+			sm_dprintf("_res.options = %x, HasWildcardMX = %d, dnssec = %d\n",
+				   (unsigned int) _res.options, HasWildcardMX, DoDNSSECValidation);
 #else /* NAMED_BIND */
 		usrerr("name server (I option) specified but BIND not compiled in");
 #endif /* NAMED_BIND */
Index: sendmail/domain.c
===================================================================
--- sendmail/domain.c	2005-02-24 15:07:50.275005439 -0500
+++ sendmail/domain.c	2005-02-24 15:45:25.023973575 -0500
@@ -23,6 +23,9 @@
 
 # include <arpa/inet.h>
 
+#ifdef HAVE_LIBVALIDAT
+#include <validat.h>
+#endif
 
 /*
 **  The standard udp packet size PACKETSZ (512) is not sufficient for some
@@ -318,6 +321,33 @@
 		return -1;
 	}
 
+#ifdef HAVE_LIBVALIDAT
+	/* perform DNSSEC Validation of the answer */
+	do {
+	    char dname[MAXDNAME];
+	    bzero(dname, MAXDNAME);
+	    strncpy(dname, host, MAXDNAME);
+	    getcanonname(dname, MAXDNAME, true, NULL);
+
+	    if (DoDNSSECValidation) {
+
+		if ((val_init() == 0) &&
+		    (val_check(dname, C_IN, T_MX, (unsigned char *) &answer) == VAL_SUCCESS)) {
+		    sm_dprintf("getmxrr: DNSSEC validation of %s succeeded.\n", dname);
+		}
+		else {
+		    sm_dprintf("getmxrr: DNSSEC validation of %s failed.\n", dname);
+		    syserr("Error: DNSSEC validation of %s failed.\n", dname);
+		    *rcode = EX_NOHOST;
+		    return -1;
+		}
+	    }
+	    else {
+		sm_dprintf("getmxrr: not performing dnssec validation.\n");
+	    }
+	} while (0);
+#endif
+
 	/* avoid problems after truncation in tcp packets */
 	if (n > sizeof(answer))
 		n = sizeof(answer);
Index: sendmail/conf.h
===================================================================
--- sendmail/conf.h	2005-02-24 15:07:13.638040225 -0500
+++ sendmail/conf.h	2005-02-24 13:11:08.440456607 -0500
@@ -213,6 +213,10 @@
 # define PIPELINING	1	/* SMTP PIPELINING */
 #endif /* PIPELINING */
 
+#ifndef HAVE_LIBVALIDAT
+#define HAVE_LIBVALIDAT		/* DNSSEC Validator Library */
+#endif
+
 /**********************************************************************
 **  End of site-specific configuration.
 **********************************************************************/
Index: sendmail/sm_resolve.c
===================================================================
--- sendmail/sm_resolve.c	2005-02-24 15:08:52.426464715 -0500
+++ sendmail/sm_resolve.c	2005-02-24 15:16:16.055474241 -0500
@@ -46,6 +46,10 @@
 # if NAMED_BIND
 #  include "sm_resolve.h"
 
+#ifdef HAVE_LIBVALIDAT
+#include <validat.h>
+#endif
+
 SM_RCSID("$Id$")
 
 static struct stot
@@ -415,7 +419,29 @@
 			   domain, rr_class, dns_type_to_string(rr_type), len);
 	}
 	if (len >= 0)
+	    {
+#ifdef HAVE_LIBVALIDAT
+		sm_dprintf("dns_lookup(%s, %d, %s): ",
+			   domain, rr_class, dns_type_to_string(rr_type));
+		if (DoDNSSECValidation) {
+		    sm_dprintf("performing dnssec validation.\n");
+		    if ((val_init() == 0) &&
+			(val_check(domain, rr_class, rr_type, reply) == VAL_SUCCESS)) {
+			sm_dprintf("\t\tdnssec validation of %s succeeded.\n",
+				   domain);
+		    }
+		    else {
+			sm_dprintf("\t\tdnssec validation of %s failed.\n",
+				   domain);
+			return NULL;
+		    }
+		}
+		else {
+		    sm_dprintf("not performing dnssec validation.\n");
+		}
+#endif
 		r = parse_dns_reply(reply, len);
+	    }
 	if (retrans > 0)
 		_res.retrans = save_retrans;
 	if (retry > 0)
Index: sendmail/sendmail.h
===================================================================
--- sendmail/sendmail.h	2005-02-24 15:08:29.898560401 -0500
+++ sendmail/sendmail.h	2005-02-24 13:12:15.322304223 -0500
@@ -2142,6 +2142,9 @@
 #endif /* !defined(_USE_SUN_NSSWITCH_) && !defined(_USE_DEC_SVC_CONF_) */
 EXTERN bool	volatile DataProgress;	/* have we sent anything since last check */
 EXTERN bool	DisConnected;	/* running with OutChannel redirect to transcript file */
+#ifdef HAVE_LIBVALIDAT
+EXTERN bool     DoDNSSECValidation;    /* perform DNSSEC validation of DNS queries */
+#endif
 EXTERN bool	DontExpandCnames;	/* do not $[...$] expand CNAMEs */
 EXTERN bool	DontInitGroups;	/* avoid initgroups() because of NIS cost */
 EXTERN bool	DontLockReadFiles;	/* don't read lock support files */
