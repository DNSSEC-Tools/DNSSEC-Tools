diff -r 630b62652f17 browser/components/preferences/advanced.xul
--- a/browser/components/preferences/advanced.xul	Tue May 31 12:17:48 2011 +0200
+++ b/browser/components/preferences/advanced.xul	Tue May 31 11:08:56 2011 -0400
@@ -127,6 +127,9 @@
       <preference id="security.disable_button.openDeviceManager"
                   name="security.disable_button.openDeviceManager"
                   type="bool"/>
+      <preference id="security.dnssec.dnssecBehavior"
+                  name="security.dnssec.dnssecBehavior"
+                  type="int"/>
     </preferences>
     
 #ifdef HAVE_SHELL_SERVICE
@@ -144,6 +147,7 @@
         <tab id="networkTab" label="&networkTab.label;" helpTopic="prefs-advanced-network"/>
         <tab id="updateTab" label="&updateTab.label;"  helpTopic="prefs-advanced-update"/>
         <tab id="encryptionTab" label="&encryptionTab.label;" helpTopic="prefs-advanced-encryption"/>
+        <tab id="dnssecTab" label="&dnssecTab.label;" helpTopic="prefs-advanced-dnssec"/>
       </tabs>
 
       <tabpanels flex="1">
@@ -421,6 +425,20 @@
           </groupbox>
         </tabpanel>
 
+        <tabpanel orient="vertical">
+          <groupbox>
+            <caption label="&dnsSecurity.label;"/>
+            <description>&dnssec.description;</description>
+           <radiogroup id="networkDnssecBehaviour"
+                       preference="security.dnssec.dnssecBehavior">
+             <radio value="1" label="&neverDNSSecure.label;"
+                    accesskey="&neverDNSSecure.accesskey;"/>
+             <radio value="0" label="&possibleDNSSecure.label;"
+                    accesskey="&possibleDNSSecure.accesskey;"/>
+           </radiogroup>
+          </groupbox>
+        </tabpanel>
+
       </tabpanels>
     </tabbox>
   </prefpane>
diff -r 630b62652f17 browser/locales/en-US/chrome/browser/preferences/advanced.dtd
--- a/browser/locales/en-US/chrome/browser/preferences/advanced.dtd	Tue May 31 12:17:48 2011 +0200
+++ b/browser/locales/en-US/chrome/browser/preferences/advanced.dtd	Tue May 31 11:08:56 2011 -0400
@@ -105,3 +105,13 @@
 <!ENTITY verify2.accesskey               "V">
 <!ENTITY viewSecurityDevices.label       "Security Devices">
 <!ENTITY viewSecurityDevices.accesskey   "y">
+
+<!ENTITY dnssecTab.label                "DNS Security">
+<!ENTITY dnssec.description             "DNS Security Policy is currently set at the system level (/etc/dnsval.conf) and this option allows that policy to be enforced or ignoredspecifies if those policies should be enforced.">
+<!ENTITY dnsSecurity.label              "DNS Security Policy">
+<!ENTITY neverDNSSecure.label           "Ignore DNS security">
+<!ENTITY neverDNSSecure.accesskey       "N">
+<!ENTITY possibleDNSSecure.label        "Enforce DNS Security">
+<!ENTITY possibleDNSSecure.accesskey    "E">
+<!ENTITY allDNSSecure.label             "Require all DNS lookups to be secure">
+<!ENTITY allDNSSecure.accesskey         "A">
diff -r 630b62652f17 browser/locales/en-US/chrome/overrides/appstrings.properties
--- a/browser/locales/en-US/chrome/overrides/appstrings.properties	Tue May 31 12:17:48 2011 +0200
+++ b/browser/locales/en-US/chrome/overrides/appstrings.properties	Tue May 31 11:08:56 2011 -0400
@@ -37,6 +37,8 @@
 malformedURI=The URL is not valid and cannot be loaded.
 fileNotFound=Firefox can't find the file at %S.
 dnsNotFound=Firefox can't find the server at %S.
+dnsDNSSECValidationError=The address (URL) failed its DNSSEC security check validation.  Please contact a system administrator for help.
+dnsDNSSECDNEError=The browser verified that there is no server for the provided address.
 protocolNotFound=Firefox doesn't know how to open this address, because the protocol (%S) isn't associated with any program.
 connectionFailure=Firefox can't establish a connection to the server at %S.
 netInterrupt=The connection to %S was interrupted while the page was loading.
diff -r 630b62652f17 browser/locales/en-US/chrome/overrides/netError.dtd
--- a/browser/locales/en-US/chrome/overrides/netError.dtd	Tue May 31 12:17:48 2011 +0200
+++ b/browser/locales/en-US/chrome/overrides/netError.dtd	Tue May 31 11:08:56 2011 -0400
@@ -25,6 +25,12 @@
 </ul>
 ">
 
+<!ENTITY dnsDNSSECValidationError.title "DNSSEC Validation Error">
+<!ENTITY dnsDNSSECValidationError.longDesc "The address (URL) failed its DNSSEC security check validation.  Please contact a system administrator for help.">
+
+<!ENTITY dnsDNSSECDNEError.title "Server Does Not Exist">
+<!ENTITY dnsDNSSECDNEError.longDesc "<p>The browser verified that there is no server for the provided address.</p><ul><li>Did you make a mistake when typing the domain? (e.g. <q><strong>ww</strong>.mozilla.org</q> instead of <q><strong>www</strong>.mozilla.org</q>)</li><li>This domain address does not exist.  Are you sure it is supposed to?  Maybe it used to but it no longer does?</li></ul>">
+
 <!ENTITY fileNotFound.title "File not found">
 <!ENTITY fileNotFound.longDesc "
 <ul>
diff -r 630b62652f17 config/autoconf.mk.in
--- a/config/autoconf.mk.in	Tue May 31 12:17:48 2011 +0200
+++ b/config/autoconf.mk.in	Tue May 31 11:08:56 2011 -0400
@@ -307,7 +307,7 @@
 OS_COMPILE_CXXFLAGS = $(OS_CPPFLAGS) @COMPILE_CXXFLAGS@
 
 OS_INCLUDES	= $(NSPR_CFLAGS) $(NSS_CFLAGS) $(JPEG_CFLAGS) $(PNG_CFLAGS) $(ZLIB_CFLAGS)
-OS_LIBS		= @LIBS@
+OS_LIBS		= @VAL_LIBS@ @LIBS@
 ACDEFINES	= @MOZ_DEFINES@
 
 WARNINGS_AS_ERRORS = @WARNINGS_AS_ERRORS@
diff -r 630b62652f17 configure.in
--- a/configure.in	Tue May 31 12:17:48 2011 +0200
+++ b/configure.in	Tue May 31 11:08:56 2011 -0400
@@ -8723,6 +8723,47 @@
 fi
 
 dnl ========================================================
+dnl = Add DNSSEC support 
+dnl ========================================================
+
+AC_ARG_WITH(system-val,
+[  --with-system-val[=PFX] 
+                  Use system DNSSEC validator [installed at prefix PFX]],
+   ,
+   [with_system_val=no])
+
+AC_ARG_WITH(system-openssl,
+[  --with-system-openssl[=PFX]
+                  Use system openssl libraries [installed at prefix PFX]],
+   ,
+   [with_system_openssl=no])
+
+VAL_LIBS=""
+OPENSSL_LIBS=""
+if test "x$with_system_val" != xno; then
+  if test -n "$_WIN32_MSVC"; then
+    VAL_LIBS="libval-threads.a libsres.a libcrypto.a libpthread.dll.a libgcc.a user32.lib gdi32.lib Ws2_32.lib"
+    AC_DEFINE(MOZ_DNSSEC)
+  else
+    CFLAGS="$CFLAGS -I${with_system_val}/include"
+    LDFLAGS="$LDFLAGS -L${with_system_val}/lib"
+    if test "x$with_system_openssl" != xno; then
+        CFLAGS="$CFLAGS -I${with_system_openssl}/include"
+        LDFLAGS="$LDFLAGS -L${with_system_openssl}/lib" 
+    fi
+    AC_CHECK_LIB(crypto, EVP_md5, OPENSSL_LIBS="-lcrypto")
+    AC_CHECK_LIB(val-threads, val_gethostbyname,
+        [VAL_LIBS="-lval-threads -lsres ${OPENSSL_LIBS} ${_PTHREAD_LDFLAGS}"
+         AC_DEFINE(MOZ_DNSSEC)], ,
+        -lsres ${OPENSSL_LIBS} ${_PTHREAD_LDFLAGS})
+  fi
+fi
+LIBS="$LIBS $VAL_LIBS"
+NSPR_LIBS="$NSPR_LIBS $VAL_LIBS"
+AC_SUBST(VAL_LIBS)
+AC_SUBST(MOZ_DNSSEC)
+
+dnl ========================================================
 dnl =
 dnl = Maintainer debug option (no --enable equivalent)
 dnl =
diff -r 630b62652f17 docshell/base/nsDocShell.cpp
--- a/docshell/base/nsDocShell.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/docshell/base/nsDocShell.cpp	Tue May 31 11:08:56 2011 -0400
@@ -3787,6 +3787,26 @@
         formatStrCount = 1;
         error.AssignLiteral("dnsNotFound");
     }
+    else if (NS_ERROR_DNSSEC_VALIDATION_ERROR == aError) {
+        NS_ENSURE_ARG_POINTER(aURI);
+        // Get the host
+        nsCAutoString host;
+        nsCOMPtr<nsIURI> innermostURI = NS_GetInnermostURI(aURI);
+        innermostURI->GetHost(host);
+        CopyUTF8toUTF16(host, formatStrs[0]);
+        formatStrCount = 1;
+        error.AssignLiteral("dnsDNSSECValidationError");
+    }
+    else if (NS_ERROR_DNSSEC_DNE_ERROR == aError) {
+        NS_ENSURE_ARG_POINTER(aURI);
+        // Get the host
+        nsCAutoString host;
+        nsCOMPtr<nsIURI> innermostURI = NS_GetInnermostURI(aURI);
+        innermostURI->GetHost(host);
+        CopyUTF8toUTF16(host, formatStrs[0]);
+        formatStrCount = 1;
+        error.AssignLiteral("dnsDNSSECDNEError");
+    }
     else if(NS_ERROR_CONNECTION_REFUSED == aError) {
         NS_ENSURE_ARG_POINTER(aURI);
         addHostPort = PR_TRUE;
@@ -6261,6 +6281,8 @@
 
         // Errors to be shown only on top-level frames
         if ((aStatus == NS_ERROR_UNKNOWN_HOST || 
+             aStatus == NS_ERROR_DNSSEC_VALIDATION_ERROR ||
+             aStatus == NS_ERROR_DNSSEC_DNE_ERROR ||
              aStatus == NS_ERROR_CONNECTION_REFUSED ||
              aStatus == NS_ERROR_UNKNOWN_PROXY_HOST || 
              aStatus == NS_ERROR_PROXY_CONNECTION_REFUSED) &&
diff -r 630b62652f17 docshell/resources/content/netError.xhtml
--- a/docshell/resources/content/netError.xhtml	Tue May 31 12:17:48 2011 +0200
+++ b/docshell/resources/content/netError.xhtml	Tue May 31 11:08:56 2011 -0400
@@ -308,6 +308,8 @@
     <div id="errorContainer">
       <div id="errorTitlesContainer">
         <h1 id="et_generic">&generic.title;</h1>
+        <h1 id="et_dnsDNSSECValidationError">&dnsDNSSECValidationError.title;</h1>
+        <h1 id="et_dnsDNSSECDNEError">&dnsDNSSECDNEError.title;</h1>
         <h1 id="et_dnsNotFound">&dnsNotFound.title;</h1>
         <h1 id="et_fileNotFound">&fileNotFound.title;</h1>
         <h1 id="et_malformedURI">&malformedURI.title;</h1>
@@ -333,6 +335,8 @@
       <div id="errorDescriptionsContainer">
         <div id="ed_generic">&generic.longDesc;</div>
         <div id="ed_dnsNotFound">&dnsNotFound.longDesc;</div>
+        <div id="ed_dnsDNSSECValidationError">&dnsDNSSECValidationError.longDesc;</div>
+        <div id="ed_dnsDNSSECDNEError">&dnsDNSSECDNEError.longDesc;</div>
         <div id="ed_fileNotFound">&fileNotFound.longDesc;</div>
         <div id="ed_malformedURI">&malformedURI.longDesc;</div>
         <div id="ed_protocolNotFound">&protocolNotFound.longDesc;</div>
diff -r 630b62652f17 dom/locales/en-US/chrome/appstrings.properties
--- a/dom/locales/en-US/chrome/appstrings.properties	Tue May 31 12:17:48 2011 +0200
+++ b/dom/locales/en-US/chrome/appstrings.properties	Tue May 31 11:08:56 2011 -0400
@@ -37,6 +37,8 @@
 malformedURI=The URL is not valid and cannot be loaded.
 fileNotFound=The file %S cannot be found. Please check the location and try again.
 dnsNotFound=%S could not be found. Please check the name and try again.
+dnsDNSSECValidationError=%S failed its DNSSEC security check validation. Please contact a security or system administrator for help.
+dnsDNSSECDNEError=%S does not exist within the DNS.  Please check the name and try again.
 protocolNotFound=%S is not a registered protocol.
 connectionFailure=The connection was refused when attempting to contact %S.
 netInterrupt=The connection to %S has terminated unexpectedly. Some data may have been transferred.
diff -r 630b62652f17 dom/locales/en-US/chrome/netError.dtd
--- a/dom/locales/en-US/chrome/netError.dtd	Tue May 31 12:17:48 2011 +0200
+++ b/dom/locales/en-US/chrome/netError.dtd	Tue May 31 11:08:56 2011 -0400
@@ -12,6 +12,12 @@
 <!ENTITY dnsNotFound.title "Address Not Found">
 <!ENTITY dnsNotFound.longDesc "<p>The browser could not find the host server for the provided address.</p><ul><li>Did you make a mistake when typing the domain? (e.g. <q><strong>ww</strong>.mozilla.org</q> instead of <q><strong>www</strong>.mozilla.org</q>)</li><li>Are you certain this domain address exists?  Its registration may have expired.</li><li>Are you unable to browse other sites?  Check your network connection and DNS server settings.</li><li>Is your computer or network protected by a firewall or proxy?  Incorrect settings can interfere with Web browsing.</li></ul>">
 
+<!ENTITY dnsDNSSECValidationError.title "DNSSEC Validation Error">
+<!ENTITY dnsDNSSECValidationError.longDesc "The address (URL) failed its DNSSEC security check validation.  Please contact a system administrator for help.">
+
+<!ENTITY dnsDNSSECDNEError.title "Server Does Not Exist">
+<!ENTITY dnsDNSSECDNEError.longDesc "<p>The browser verified that there is no server for the provided address.</p><ul><li>Did you make a mistake when typing the domain? (e.g. <q><strong>ww</strong>.mozilla.org</q> instead of <q><strong>www</strong>.mozilla.org</q>)</li><li>This domain address does not exist.  Are you sure it is supposed to?  Maybe it used to but it no longer does?</li></ul>">
+
 <!ENTITY fileNotFound.title "File Not Found">
 <!ENTITY fileNotFound.longDesc "<ul><li>Could the item have been renamed, removed, or relocated?</li><li>Is there a spelling, capitalization, or other typographical error in the address?</li><li>Do you have sufficient access permissions to the requested item?</li></ul>">
 
diff -r 630b62652f17 layout/base/nsPresContext.cpp
--- a/layout/base/nsPresContext.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/layout/base/nsPresContext.cpp	Tue May 31 11:08:56 2011 -0400
@@ -69,6 +69,7 @@
 #include "nsIWeakReferenceUtils.h"
 #include "nsCSSRendering.h"
 #include "prprf.h"
+#include "prnetdb.h"
 #include "nsContentPolicyUtils.h"
 #include "nsIDOMDocument.h"
 #include "nsAutoPtr.h"
@@ -310,6 +311,11 @@
   Preferences::UnregisterCallback(nsPresContext::PrefChangedCallback,
                                   "image.animation_mode",
                                   this);
+#ifdef MOZ_DNSSEC
+  Preferences::UnregisterCallback(nsPresContext::PrefChangedCallback,
+                                  "security.dnssec.dnssecBehavior",
+                                  this);
+#endif
 #ifdef IBMBIDI
   Preferences::UnregisterCallback(nsPresContext::PrefChangedCallback,
                                   "bidi.",
@@ -737,6 +743,10 @@
   else // dynamic change to invalid value should act like it does initially
     mImageAnimationModePref = imgIContainer::kNormalAnimMode;
 
+#ifdef MOZ_DNSSEC
+  PR_set_dnssec_validate_policy(Preferences::GetInt("security.dnssec.dnssecBehavior"));
+#endif /* MOZ_DNSSEC */
+
   PRUint32 bidiOptions = GetBidi();
 
   PRInt32 prefInt =
@@ -978,6 +988,11 @@
   Preferences::RegisterCallback(nsPresContext::PrefChangedCallback,
                                 "image.animation_mode",
                                 this);
+#ifdef MOZ_DNSSEC
+  Preferences::RegisterCallback(nsPresContext::PrefChangedCallback,
+                                 "security.dnssec.dnssecBehavior",
+                                 this);
+#endif
 #ifdef IBMBIDI
   Preferences::RegisterCallback(nsPresContext::PrefChangedCallback,
                                 "bidi.",
diff -r 630b62652f17 netwerk/base/public/nsNetError.h
--- a/netwerk/base/public/nsNetError.h	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/base/public/nsNetError.h	Tue May 31 11:08:56 2011 -0400
@@ -273,6 +273,12 @@
  * DNS specific error codes:
  */
 
+#define NS_ERROR_DNSSEC_VALIDATION_ERROR \
+    NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 34)
+
+#define NS_ERROR_DNSSEC_DNE_ERROR \
+    NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 35)
+
 /**
  * The lookup of a hostname failed.  This generally refers to the hostname
  * from the URL being loaded.
diff -r 630b62652f17 netwerk/base/src/nsSocketTransport2.cpp
--- a/netwerk/base/src/nsSocketTransport2.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/base/src/nsSocketTransport2.cpp	Tue May 31 11:08:56 2011 -0400
@@ -68,6 +68,8 @@
 #include "nsIPipe.h"
 #include "nsIProgrammingLanguage.h"
 #include "nsIClassInfoImpl.h"
+#include "nsIDNSService.h"
+#include "nsISupportsPrimitives.h"
 
 #if defined(XP_WIN) || defined(MOZ_PLATFORM_MAEMO)
 #include "nsNativeConnectionHelper.h"
@@ -1453,11 +1455,28 @@
             // For SOCKS proxies (mProxyTransparent == true), the socket 
             // transport resolves the real host here, so there's no fixup 
             // (see bug 226943).
-            if ((status == NS_ERROR_UNKNOWN_HOST) && !mProxyTransparent &&
+            if ((status == NS_ERROR_UNKNOWN_HOST ||
+                 status == NS_ERROR_DNSSEC_VALIDATION_ERROR ||
+                 status == NS_ERROR_DNSSEC_DNE_ERROR) && !mProxyTransparent &&
                 !mProxyHost.IsEmpty())
                 mCondition = NS_ERROR_UNKNOWN_PROXY_HOST;
             else
                 mCondition = status;
+
+            switch (status) {
+            case NS_ERROR_UNKNOWN_HOST:
+                SOCKET_LOG(("NS_ERROR_UNKNOWN_HOST"));
+                break;
+            case NS_ERROR_DNSSEC_DNE_ERROR:
+                SOCKET_LOG(("NS_ERROR_DNSSEC_DNE_ERROR"));
+                break;
+            case NS_ERROR_DNSSEC_VALIDATION_ERROR:
+                SOCKET_LOG(("NS_ERROR_DNSSEC_VALIDATION_ERROR"));
+                break;
+            default:
+                SOCKET_LOG(("NS ERROR UNKNOWN"));
+                break;
+            }
         }
         else if (mState == STATE_RESOLVING)
             mCondition = InitiateSocket();
diff -r 630b62652f17 netwerk/cache/nsCacheService.cpp
--- a/netwerk/cache/nsCacheService.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/cache/nsCacheService.cpp	Tue May 31 11:08:56 2011 -0400
@@ -41,6 +41,11 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
+// set CPPFLAGS in configure.in in addition to CFLAGS
+//#ifdef MOZ_DNSSEC
+//#include <validator/validator.h>
+//#endif
+
 #include "necko-config.h"
 
 #include "nsCache.h"
@@ -1211,6 +1216,10 @@
         }
     }
 
+//#ifdef MOZ_DNSSEC
+//    val_free_validator_state();
+//#endif
+
     return res;
 }
 
diff -r 630b62652f17 netwerk/dns/nsDNSService2.cpp
--- a/netwerk/dns/nsDNSService2.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/dns/nsDNSService2.cpp	Tue May 31 11:08:56 2011 -0400
@@ -149,6 +149,7 @@
             // Both mHostRecord->addr_info and mHostRecord->addr are null.
             // This can happen if mHostRecord->addr_info expired and the
             // attempt to reresolve it failed.
+            mDone = !mIter;
             return NS_ERROR_NOT_AVAILABLE;
         }
         memcpy(addr, mHostRecord->addr, sizeof(PRNetAddr));
@@ -245,13 +246,11 @@
     // the caller to be able to addref/release multiple times without
     // destroying the record prematurely.
     nsCOMPtr<nsIDNSRecord> rec;
-    if (NS_SUCCEEDED(status)) {
-        NS_ASSERTION(hostRecord, "no host record");
+    // create the instance even if status is not success, since this
+    // might be an error/non-existence condition we want to propagate up 
         rec = new nsDNSRecord(hostRecord);
         if (!rec)
             status = NS_ERROR_OUT_OF_MEMORY;
-    }
-
     mListener->OnLookupComplete(this, rec, status);
     mListener = nsnull;
 
diff -r 630b62652f17 netwerk/dns/nsHostResolver.cpp
--- a/netwerk/dns/nsHostResolver.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/dns/nsHostResolver.cpp	Tue May 31 11:08:56 2011 -0400
@@ -57,6 +57,7 @@
 #include "pratom.h"
 #include "prthread.h"
 #include "prerror.h"
+#include "prerr.h"
 #include "prtime.h"
 #include "prlong.h"
 #include "prlog.h"
@@ -176,7 +177,7 @@
 // this macro filters out any flags that are not used when constructing the
 // host key.  the significant flags are those that would affect the resulting
 // host record (i.e., the flags that are passed down to PR_GetAddrInfoByName).
-#define RES_KEY_FLAGS(_f) ((_f) & nsHostResolver::RES_CANON_NAME)
+#define RES_KEY_FLAGS(_f) ((_f) & (nsHostResolver::RES_CANON_NAME|nsHostResolver::RES_EXTENDED_ERRS))
 
 nsresult
 nsHostRecord::Create(const nsHostKey *key, nsHostRecord **result)
@@ -204,6 +205,8 @@
     PR_INIT_CLIST(&rec->callbacks);
     rec->negative = PR_FALSE;
     memcpy((char *) rec->host, key->host, hostLen);
+    rec->security_status_flags = 0;
+    rec->status = NS_OK;
 
     *result = rec;
     return NS_OK;
@@ -482,6 +485,8 @@
     if (!net_IsValidHostName(nsDependentCString(host)))
         return NS_ERROR_UNKNOWN_HOST;
 
+    flags = flags | RES_EXTENDED_ERRS;
+
     // if result is set inside the lock, then we need to issue the
     // callback before returning.
     nsRefPtr<nsHostRecord> result;
@@ -520,12 +525,13 @@
                 // put reference to host record on stack...
                 result = he->rec;
                 if (he->rec->negative) {
-                    status = NS_ERROR_UNKNOWN_HOST;
                     if (!he->rec->resolving) 
                         // return the cached failure to the caller, but try and refresh
                         // the record in the background
                         IssueLookup(he->rec);
                 }
+                // use the cached status value 
+                status = he->rec->status;
             }
             // if the host name is an IP address literal and has been parsed,
             // go ahead and use it.
@@ -803,6 +809,7 @@
             rec->expiration += 1;                 /* one minute for negative cache */
             rec->negative = PR_TRUE;
         }
+        rec->status = status;
         rec->resolving = PR_FALSE;
         
         if (rec->usingAnyThread) {
@@ -861,14 +868,44 @@
         if (!(rec->flags & RES_CANON_NAME))
             flags |= PR_AI_NOCANONNAME;
 
+        if (rec->flags & RES_EXTENDED_ERRS) {
+            ai = PR_GetAddrInfoByNameExtended(rec->host, rec->af, flags,
+                                              &(rec->security_status_flags));
+#if defined(RES_RETRY_ON_FAILURE)
+            if (!ai && rs.Reset())
+                ai = PR_GetAddrInfoByName(rec->host, rec->af, flags);
+#endif
+        } else {
         ai = PR_GetAddrInfoByName(rec->host, rec->af, flags);
 #if defined(RES_RETRY_ON_FAILURE)
         if (!ai && rs.Reset())
             ai = PR_GetAddrInfoByName(rec->host, rec->af, flags);
 #endif
+        }
 
         // convert error code to nsresult.
-        nsresult status = ai ? NS_OK : NS_ERROR_UNKNOWN_HOST;
+        nsresult status;
+
+        if (!ai) {
+            // handle errors
+            PRErrorCode err = PR_GetError();
+            switch(err) {
+            case PR_DNSSEC_VALIDATION_ERROR:
+                status = NS_ERROR_DNSSEC_VALIDATION_ERROR;
+                break;
+
+            case PR_DNSSEC_DNE_ERROR:
+                status = NS_ERROR_DNSSEC_DNE_ERROR;
+                break;
+
+            default:
+                status = NS_ERROR_UNKNOWN_HOST;
+                break;
+            }
+        } else {
+            status = NS_OK;
+        }
+
         resolver->OnLookupComplete(rec, status, ai);
         LOG(("lookup complete for %s ...\n", rec->host));
     }
diff -r 630b62652f17 netwerk/dns/nsHostResolver.h
--- a/netwerk/dns/nsHostResolver.h	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/dns/nsHostResolver.h	Tue May 31 11:08:56 2011 -0400
@@ -119,10 +119,12 @@
                                 Negative cache entries are valid just like any other
                                 (though never for more than 60 seconds), but a use
                                 of that negative entry forces an asynchronous refresh. */
+    nsresult    status;
 
     PRUint32     expiration; /* measured in minutes since epoch */
+    PRUint16    security_status_flags; /* DNSSEC information (bitmask) */
 
-    PRBool HasResult() const { return addr_info || addr || negative; }
+    PRBool HasResult() const { return addr_info || addr || negative || security_status_flags; }
 
 private:
     friend class nsHostResolver;
@@ -232,7 +234,8 @@
         RES_CANON_NAME   = 1 << 1,
         RES_PRIORITY_MEDIUM   = 1 << 2,
         RES_PRIORITY_LOW  = 1 << 3,
-        RES_SPECULATE     = 1 << 4   
+        RES_SPECULATE     = 1 << 4,
+        RES_EXTENDED_ERRS = 1 << 5
     };
 
 private:
diff -r 630b62652f17 netwerk/protocol/http/nsHttpChannel.cpp
--- a/netwerk/protocol/http/nsHttpChannel.cpp	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/protocol/http/nsHttpChannel.cpp	Tue May 31 11:08:56 2011 -0400
@@ -68,6 +68,7 @@
 #include "nsIOService.h"
 #include "nsICacheService.h"
 #include "nsDNSPrefetch.h"
+#include "nsIDNSService.h"
 #include "nsChannelClassifier.h"
 #include "nsIRedirectResultListener.h"
 #include "mozilla/TimeStamp.h"
@@ -4135,6 +4136,13 @@
     if (mTimingEnabled && request == mCachePump) {
         mCacheReadEnd = mozilla::TimeStamp::Now();
     }
+    if (mStatus == NS_ERROR_DNSSEC_VALIDATION_ERROR) {
+        gHttpHandler->OnDNSSECResponseUntrusted(this);
+    } else if (NS_FAILED(mStatus)) {
+        gHttpHandler->OnDNSSECResponseError(this);
+    } else { 
+        gHttpHandler->OnDNSSECResponseTrusted(this);
+    }
 
      // allow content to be cached if it was loaded successfully (bug #482935)
      PRBool contentComplete = NS_SUCCEEDED(status);
diff -r 630b62652f17 netwerk/protocol/http/nsHttpHandler.h
--- a/netwerk/protocol/http/nsHttpHandler.h	Tue May 31 12:17:48 2011 +0200
+++ b/netwerk/protocol/http/nsHttpHandler.h	Tue May 31 11:08:56 2011 -0400
@@ -200,6 +200,19 @@
         NotifyObservers(chan, NS_HTTP_ON_EXAMINE_MERGED_RESPONSE_TOPIC);
     }
 
+    void OnDNSSECResponseUntrusted(nsIHttpChannel *chan)
+    {
+        NotifyObservers(chan, "dnssec-status-untrusted");
+    }
+    void OnDNSSECResponseError(nsIHttpChannel *chan)
+    {
+        NotifyObservers(chan, "dnssec-status-error");
+    }
+    void OnDNSSECResponseTrusted(nsIHttpChannel *chan)
+    {
+        NotifyObservers(chan, "dnssec-status-trusted");
+    }
+
     // Called by channels before a redirect happens. This notifies both the
     // channel's and the global redirect observers.
     nsresult AsyncOnChannelRedirect(nsIChannel* oldChan, nsIChannel* newChan,
diff -r 630b62652f17 nsprpub/config/autoconf.mk.in
--- a/nsprpub/config/autoconf.mk.in	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/config/autoconf.mk.in	Tue May 31 11:08:56 2011 -0400
@@ -34,6 +34,7 @@
 
 LIBNSPR		= @LIBNSPR@
 LIBPLC		= @LIBPLC@
+VAL_LIBS    = @VAL_LIBS@
 
 CROSS_COMPILE	= @CROSS_COMPILE@
 MOZ_OPTIMIZE	= @MOZ_OPTIMIZE@
diff -r 630b62652f17 nsprpub/config/nspr-config.in
--- a/nsprpub/config/nspr-config.in	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/config/nspr-config.in	Tue May 31 11:08:56 2011 -0400
@@ -138,6 +138,6 @@
 	  libdirs="$libdirs $i"
         fi
       done
-      echo $libdirs @OS_LIBS@
+      echo $libdirs @VAL_LIBS@ @OS_LIBS@
 fi      
 
diff -r 630b62652f17 nsprpub/configure
--- a/nsprpub/configure	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/configure	Tue May 31 11:08:56 2011 -0400
@@ -91,6 +91,12 @@
   --enable-wrap-malloc    Wrap malloc calls (gnu linker only)"
 ac_help="$ac_help
   --with-wrap-malloc=SHAREDLIB  Location of malloc wrapper library"
+ac_help="$ac_help
+  --with-system-val[=PFX] 
+                  Use system DNSSEC validator [installed at prefix PFX]"
+ac_help="$ac_help
+  --with-system-openssl[=PFX]
+                  Use system openssl libraries [installed at prefix PFX]"
 
 # Initialize some variables set by options.
 # The variables have the same names as the options, with
@@ -649,7 +655,7 @@
 fi
 
 echo $ac_n "checking host system type""... $ac_c" 1>&6
-echo "configure:653: checking host system type" >&5
+echo "configure:659: checking host system type" >&5
 
 host_alias=$host
 case "$host_alias" in
@@ -670,7 +676,7 @@
 echo "$ac_t""$host" 1>&6
 
 echo $ac_n "checking target system type""... $ac_c" 1>&6
-echo "configure:674: checking target system type" >&5
+echo "configure:680: checking target system type" >&5
 
 target_alias=$target
 case "$target_alias" in
@@ -688,7 +694,7 @@
 echo "$ac_t""$target" 1>&6
 
 echo $ac_n "checking build system type""... $ac_c" 1>&6
-echo "configure:692: checking build system type" >&5
+echo "configure:698: checking build system type" >&5
 
 build_alias=$build
 case "$build_alias" in
@@ -765,7 +771,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:769: checking for $ac_word" >&5
+echo "configure:775: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1196,7 +1202,7 @@
     # Extract the first word of "$WHOAMI whoami", so it can be a program name with args.
 set dummy $WHOAMI whoami; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1200: checking for $ac_word" >&5
+echo "configure:1206: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_WHOAMI'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1267,13 +1273,13 @@
     _SAVE_LDFLAGS="$LDFLAGS"
 
     echo $ac_n "checking for $host compiler""... $ac_c" 1>&6
-echo "configure:1271: checking for $host compiler" >&5
+echo "configure:1277: checking for $host compiler" >&5
     for ac_prog in $HOST_CC gcc cc /usr/ucb/cc
 do
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1277: checking for $ac_word" >&5
+echo "configure:1283: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_HOST_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1319,16 +1325,16 @@
     LDFLAGS="$HOST_LDFLAGS"
 
     echo $ac_n "checking whether the $host compiler ($HOST_CC $HOST_CFLAGS $HOST_LDFLAGS) works""... $ac_c" 1>&6
-echo "configure:1323: checking whether the $host compiler ($HOST_CC $HOST_CFLAGS $HOST_LDFLAGS) works" >&5
+echo "configure:1329: checking whether the $host compiler ($HOST_CC $HOST_CFLAGS $HOST_LDFLAGS) works" >&5
     cat > conftest.$ac_ext <<EOF
-#line 1325 "configure"
+#line 1331 "configure"
 #include "confdefs.h"
 
 int main() {
 return(0);
 ; return 0; }
 EOF
-if { (eval echo configure:1332: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1338: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_prog_host_cc_works=1 echo "$ac_t""yes" 1>&6
 else
@@ -1357,7 +1363,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1361: checking for $ac_word" >&5
+echo "configure:1367: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1391,7 +1397,7 @@
     # Extract the first word of "gcc", so it can be a program name with args.
 set dummy gcc; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1395: checking for $ac_word" >&5
+echo "configure:1401: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1421,7 +1427,7 @@
   # Extract the first word of "cc", so it can be a program name with args.
 set dummy cc; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1425: checking for $ac_word" >&5
+echo "configure:1431: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1472,7 +1478,7 @@
       # Extract the first word of "cl", so it can be a program name with args.
 set dummy cl; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1476: checking for $ac_word" >&5
+echo "configure:1482: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1504,7 +1510,7 @@
 fi
 
 echo $ac_n "checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works""... $ac_c" 1>&6
-echo "configure:1508: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works" >&5
+echo "configure:1514: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works" >&5
 
 ac_ext=c
 # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
@@ -1515,12 +1521,12 @@
 
 cat > conftest.$ac_ext << EOF
 
-#line 1519 "configure"
+#line 1525 "configure"
 #include "confdefs.h"
 
 main(){return(0);}
 EOF
-if { (eval echo configure:1524: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:1530: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
   if (./conftest; exit) 2>/dev/null; then
@@ -1546,12 +1552,12 @@
   { echo "configure: error: installation or configuration problem: C compiler cannot create executables." 1>&2; exit 1; }
 fi
 echo $ac_n "checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
-echo "configure:1550: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler" >&5
+echo "configure:1556: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler" >&5
 echo "$ac_t""$ac_cv_prog_cc_cross" 1>&6
 cross_compiling=$ac_cv_prog_cc_cross
 
 echo $ac_n "checking whether we are using GNU C""... $ac_c" 1>&6
-echo "configure:1555: checking whether we are using GNU C" >&5
+echo "configure:1561: checking whether we are using GNU C" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_gcc'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1560,7 +1566,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1564: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1570: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -1579,7 +1585,7 @@
 ac_save_CFLAGS="$CFLAGS"
 CFLAGS=
 echo $ac_n "checking whether ${CC-cc} accepts -g""... $ac_c" 1>&6
-echo "configure:1583: checking whether ${CC-cc} accepts -g" >&5
+echo "configure:1589: checking whether ${CC-cc} accepts -g" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_cc_g'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1616,7 +1622,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1620: checking for $ac_word" >&5
+echo "configure:1626: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CXX'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1652,7 +1658,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1656: checking for $ac_word" >&5
+echo "configure:1662: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CXX'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1684,7 +1690,7 @@
 
 
 echo $ac_n "checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works""... $ac_c" 1>&6
-echo "configure:1688: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works" >&5
+echo "configure:1694: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works" >&5
 
 ac_ext=C
 # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
@@ -1695,12 +1701,12 @@
 
 cat > conftest.$ac_ext << EOF
 
-#line 1699 "configure"
+#line 1705 "configure"
 #include "confdefs.h"
 
 int main(){return(0);}
 EOF
-if { (eval echo configure:1704: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:1710: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cxx_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
   if (./conftest; exit) 2>/dev/null; then
@@ -1726,12 +1732,12 @@
   { echo "configure: error: installation or configuration problem: C++ compiler cannot create executables." 1>&2; exit 1; }
 fi
 echo $ac_n "checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
-echo "configure:1730: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler" >&5
+echo "configure:1736: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler" >&5
 echo "$ac_t""$ac_cv_prog_cxx_cross" 1>&6
 cross_compiling=$ac_cv_prog_cxx_cross
 
 echo $ac_n "checking whether we are using GNU C++""... $ac_c" 1>&6
-echo "configure:1735: checking whether we are using GNU C++" >&5
+echo "configure:1741: checking whether we are using GNU C++" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_gxx'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1740,7 +1746,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:1744: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:1750: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
   ac_cv_prog_gxx=yes
 else
   ac_cv_prog_gxx=no
@@ -1759,7 +1765,7 @@
 ac_save_CXXFLAGS="$CXXFLAGS"
 CXXFLAGS=
 echo $ac_n "checking whether ${CXX-g++} accepts -g""... $ac_c" 1>&6
-echo "configure:1763: checking whether ${CXX-g++} accepts -g" >&5
+echo "configure:1769: checking whether ${CXX-g++} accepts -g" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_cxx_g'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1804,7 +1810,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1808: checking for $ac_word" >&5
+echo "configure:1814: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1839,7 +1845,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1843: checking for $ac_word" >&5
+echo "configure:1849: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_AR'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1874,7 +1880,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1878: checking for $ac_word" >&5
+echo "configure:1884: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_AS'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1909,7 +1915,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1913: checking for $ac_word" >&5
+echo "configure:1919: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_LD'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1944,7 +1950,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1948: checking for $ac_word" >&5
+echo "configure:1954: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_STRIP'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1979,7 +1985,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1983: checking for $ac_word" >&5
+echo "configure:1989: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_WINDRES'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2014,7 +2020,7 @@
     # Extract the first word of "gcc", so it can be a program name with args.
 set dummy gcc; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2018: checking for $ac_word" >&5
+echo "configure:2024: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2044,7 +2050,7 @@
   # Extract the first word of "cc", so it can be a program name with args.
 set dummy cc; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2048: checking for $ac_word" >&5
+echo "configure:2054: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2095,7 +2101,7 @@
       # Extract the first word of "cl", so it can be a program name with args.
 set dummy cl; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2099: checking for $ac_word" >&5
+echo "configure:2105: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2127,7 +2133,7 @@
 fi
 
 echo $ac_n "checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works""... $ac_c" 1>&6
-echo "configure:2131: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works" >&5
+echo "configure:2137: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works" >&5
 
 ac_ext=c
 # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
@@ -2138,12 +2144,12 @@
 
 cat > conftest.$ac_ext << EOF
 
-#line 2142 "configure"
+#line 2148 "configure"
 #include "confdefs.h"
 
 main(){return(0);}
 EOF
-if { (eval echo configure:2147: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:2153: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
   if (./conftest; exit) 2>/dev/null; then
@@ -2169,12 +2175,12 @@
   { echo "configure: error: installation or configuration problem: C compiler cannot create executables." 1>&2; exit 1; }
 fi
 echo $ac_n "checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
-echo "configure:2173: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler" >&5
+echo "configure:2179: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler" >&5
 echo "$ac_t""$ac_cv_prog_cc_cross" 1>&6
 cross_compiling=$ac_cv_prog_cc_cross
 
 echo $ac_n "checking whether we are using GNU C""... $ac_c" 1>&6
-echo "configure:2178: checking whether we are using GNU C" >&5
+echo "configure:2184: checking whether we are using GNU C" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_gcc'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2183,7 +2189,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:2187: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:2193: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -2202,7 +2208,7 @@
 ac_save_CFLAGS="$CFLAGS"
 CFLAGS=
 echo $ac_n "checking whether ${CC-cc} accepts -g""... $ac_c" 1>&6
-echo "configure:2206: checking whether ${CC-cc} accepts -g" >&5
+echo "configure:2212: checking whether ${CC-cc} accepts -g" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_cc_g'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2242,7 +2248,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2246: checking for $ac_word" >&5
+echo "configure:2252: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_CXX'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2274,7 +2280,7 @@
 
 
 echo $ac_n "checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works""... $ac_c" 1>&6
-echo "configure:2278: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works" >&5
+echo "configure:2284: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works" >&5
 
 ac_ext=C
 # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
@@ -2285,12 +2291,12 @@
 
 cat > conftest.$ac_ext << EOF
 
-#line 2289 "configure"
+#line 2295 "configure"
 #include "confdefs.h"
 
 int main(){return(0);}
 EOF
-if { (eval echo configure:2294: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:2300: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cxx_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
   if (./conftest; exit) 2>/dev/null; then
@@ -2316,12 +2322,12 @@
   { echo "configure: error: installation or configuration problem: C++ compiler cannot create executables." 1>&2; exit 1; }
 fi
 echo $ac_n "checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
-echo "configure:2320: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler" >&5
+echo "configure:2326: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler" >&5
 echo "$ac_t""$ac_cv_prog_cxx_cross" 1>&6
 cross_compiling=$ac_cv_prog_cxx_cross
 
 echo $ac_n "checking whether we are using GNU C++""... $ac_c" 1>&6
-echo "configure:2325: checking whether we are using GNU C++" >&5
+echo "configure:2331: checking whether we are using GNU C++" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_gxx'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2330,7 +2336,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:2334: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:2340: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
   ac_cv_prog_gxx=yes
 else
   ac_cv_prog_gxx=no
@@ -2349,7 +2355,7 @@
 ac_save_CXXFLAGS="$CXXFLAGS"
 CXXFLAGS=
 echo $ac_n "checking whether ${CXX-g++} accepts -g""... $ac_c" 1>&6
-echo "configure:2353: checking whether ${CXX-g++} accepts -g" >&5
+echo "configure:2359: checking whether ${CXX-g++} accepts -g" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_cxx_g'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2383,7 +2389,7 @@
         fi
     fi
     echo $ac_n "checking how to run the C preprocessor""... $ac_c" 1>&6
-echo "configure:2387: checking how to run the C preprocessor" >&5
+echo "configure:2393: checking how to run the C preprocessor" >&5
 # On Suns, sometimes $CPP names a directory.
 if test -n "$CPP" && test -d "$CPP"; then
   CPP=
@@ -2398,13 +2404,13 @@
   # On the NeXT, cc -E runs the code through the compiler's parser,
   # not just through cpp.
   cat > conftest.$ac_ext <<EOF
-#line 2402 "configure"
+#line 2408 "configure"
 #include "confdefs.h"
 #include <assert.h>
 Syntax Error
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:2408: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:2414: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   :
@@ -2415,13 +2421,13 @@
   rm -rf conftest*
   CPP="${CC-cc} -E -traditional-cpp"
   cat > conftest.$ac_ext <<EOF
-#line 2419 "configure"
+#line 2425 "configure"
 #include "confdefs.h"
 #include <assert.h>
 Syntax Error
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:2425: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:2431: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   :
@@ -2432,13 +2438,13 @@
   rm -rf conftest*
   CPP="${CC-cc} -nologo -E"
   cat > conftest.$ac_ext <<EOF
-#line 2436 "configure"
+#line 2442 "configure"
 #include "confdefs.h"
 #include <assert.h>
 Syntax Error
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:2442: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:2448: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   :
@@ -2465,7 +2471,7 @@
     # Extract the first word of "ranlib", so it can be a program name with args.
 set dummy ranlib; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2469: checking for $ac_word" >&5
+echo "configure:2475: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2497,7 +2503,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2501: checking for $ac_word" >&5
+echo "configure:2507: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_AS'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2538,7 +2544,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2542: checking for $ac_word" >&5
+echo "configure:2548: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_AR'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2579,7 +2585,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2583: checking for $ac_word" >&5
+echo "configure:2589: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_LD'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2620,7 +2626,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2624: checking for $ac_word" >&5
+echo "configure:2630: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_STRIP'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2661,7 +2667,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2665: checking for $ac_word" >&5
+echo "configure:2671: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_WINDRES'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2729,7 +2735,7 @@
 fi
 
 echo $ac_n "checking for gcc -pipe support""... $ac_c" 1>&6
-echo "configure:2733: checking for gcc -pipe support" >&5
+echo "configure:2739: checking for gcc -pipe support" >&5
 if test -n "$GNU_CC" && test -n "$GNU_CXX" && test -n "$GNU_AS"; then
     echo '#include <stdio.h>' > dummy-hello.c
     echo 'int main() { printf("Hello World\n"); return 0; }' >> dummy-hello.c
@@ -2744,14 +2750,14 @@
         _SAVE_CFLAGS=$CFLAGS
         CFLAGS="$CFLAGS -pipe"
         cat > conftest.$ac_ext <<EOF
-#line 2748 "configure"
+#line 2754 "configure"
 #include "confdefs.h"
  #include <stdio.h> 
 int main() {
 printf("Hello World\n");
 ; return 0; }
 EOF
-if { (eval echo configure:2755: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:2761: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   _res_gcc_pipe="yes"
 else
@@ -2781,16 +2787,16 @@
 CFLAGS="$CFLAGS -fprofile-generate -fprofile-correction"
 
 echo $ac_n "checking whether C compiler supports -fprofile-generate""... $ac_c" 1>&6
-echo "configure:2785: checking whether C compiler supports -fprofile-generate" >&5
+echo "configure:2791: checking whether C compiler supports -fprofile-generate" >&5
 cat > conftest.$ac_ext <<EOF
-#line 2787 "configure"
+#line 2793 "configure"
 #include "confdefs.h"
 
 int main() {
 return 0;
 ; return 0; }
 EOF
-if { (eval echo configure:2794: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:2800: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
    PROFILE_GEN_CFLAGS="-fprofile-generate"
                  result="yes" 
@@ -2813,7 +2819,7 @@
 
 if test "$GNU_CC"; then
     echo $ac_n "checking for visibility(hidden) attribute""... $ac_c" 1>&6
-echo "configure:2817: checking for visibility(hidden) attribute" >&5
+echo "configure:2823: checking for visibility(hidden) attribute" >&5
 if eval "test \"`echo '$''{'ac_cv_visibility_hidden'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2837,7 +2843,7 @@
 EOF
 
         echo $ac_n "checking for visibility pragma support""... $ac_c" 1>&6
-echo "configure:2841: checking for visibility pragma support" >&5
+echo "configure:2847: checking for visibility pragma support" >&5
 if eval "test \"`echo '$''{'ac_cv_visibility_pragma'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -2890,7 +2896,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2894: checking for $ac_word" >&5
+echo "configure:2900: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_PERL'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -3176,17 +3182,17 @@
     DSO_LDOPTS='-brtl -bnortllib -bM:SRE -bnoentry -bexpall -blibpath:/usr/lib:/lib'
     ac_safe=`echo "sys/atomic_op.h" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for sys/atomic_op.h""... $ac_c" 1>&6
-echo "configure:3180: checking for sys/atomic_op.h" >&5
+echo "configure:3186: checking for sys/atomic_op.h" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3185 "configure"
+#line 3191 "configure"
 #include "confdefs.h"
 #include <sys/atomic_op.h>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:3190: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:3196: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -3382,7 +3388,7 @@
         _DEBUG_FLAGS='-gdwarf-2 -O0'
         MKSHLIB='$(CCC) $(DSO_LDOPTS) -o $@'
         echo $ac_n "checking for gethostbyaddr in -lbind""... $ac_c" 1>&6
-echo "configure:3386: checking for gethostbyaddr in -lbind" >&5
+echo "configure:3392: checking for gethostbyaddr in -lbind" >&5
 ac_lib_var=`echo bind'_'gethostbyaddr | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -3390,7 +3396,7 @@
   ac_save_LIBS="$LIBS"
 LIBS="-lbind  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 3394 "configure"
+#line 3400 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -3401,7 +3407,7 @@
 gethostbyaddr()
 ; return 0; }
 EOF
-if { (eval echo configure:3405: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3411: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4753,17 +4759,17 @@
         _OPTIMIZE_FLAGS="$_OPTIMIZE_FLAGS -Olimit 4000"
         ac_safe=`echo "machine/builtins.h" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for machine/builtins.h""... $ac_c" 1>&6
-echo "configure:4757: checking for machine/builtins.h" >&5
+echo "configure:4763: checking for machine/builtins.h" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4762 "configure"
+#line 4768 "configure"
 #include "confdefs.h"
 #include <machine/builtins.h>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:4767: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:4773: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5406,13 +5412,12 @@
 if test -z "$SKIP_LIBRARY_CHECKS"; then
 
 
-
 case $target in
 *-darwin*|*-beos*|*-os2*)
     ;;
 *)
     echo $ac_n "checking for dlopen in -ldl""... $ac_c" 1>&6
-echo "configure:5416: checking for dlopen in -ldl" >&5
+echo "configure:5421: checking for dlopen in -ldl" >&5
 ac_lib_var=`echo dl'_'dlopen | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5420,7 +5425,7 @@
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5424 "configure"
+#line 5429 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -5431,7 +5436,7 @@
 dlopen()
 ; return 0; }
 EOF
-if { (eval echo configure:5435: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5440: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5448,17 +5453,17 @@
   echo "$ac_t""yes" 1>&6
   ac_safe=`echo "dlfcn.h" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for dlfcn.h""... $ac_c" 1>&6
-echo "configure:5452: checking for dlfcn.h" >&5
+echo "configure:5457: checking for dlfcn.h" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5457 "configure"
+#line 5462 "configure"
 #include "confdefs.h"
 #include <dlfcn.h>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5462: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5467: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5491,13 +5496,13 @@
 
 if test $ac_cv_prog_gcc = yes; then
     echo $ac_n "checking whether ${CC-cc} needs -traditional""... $ac_c" 1>&6
-echo "configure:5495: checking whether ${CC-cc} needs -traditional" >&5
+echo "configure:5500: checking whether ${CC-cc} needs -traditional" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_gcc_traditional'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
     ac_pattern="Autoconf.*'x'"
   cat > conftest.$ac_ext <<EOF
-#line 5501 "configure"
+#line 5506 "configure"
 #include "confdefs.h"
 #include <sgtty.h>
 Autoconf TIOCGETP
@@ -5515,7 +5520,7 @@
 
   if test $ac_cv_prog_gcc_traditional = no; then
     cat > conftest.$ac_ext <<EOF
-#line 5519 "configure"
+#line 5524 "configure"
 #include "confdefs.h"
 #include <termio.h>
 Autoconf TCGETA
@@ -5539,12 +5544,12 @@
 for ac_func in lchown strerror
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:5543: checking for $ac_func" >&5
+echo "configure:5548: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5548 "configure"
+#line 5553 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -5567,7 +5572,7 @@
 
 ; return 0; }
 EOF
-if { (eval echo configure:5571: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5576: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5618,7 +5623,7 @@
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:5622: checking for $ac_word" >&5
+echo "configure:5627: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_path_CCACHE'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5677,7 +5682,7 @@
 if test -z "$GNU_CC"; then
 
     echo $ac_n "checking for +Olit support""... $ac_c" 1>&6
-echo "configure:5681: checking for +Olit support" >&5
+echo "configure:5686: checking for +Olit support" >&5
 if eval "test \"`echo '$''{'ac_cv_hpux_usable_olit_option'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5719,7 +5724,7 @@
 *)
     
 echo $ac_n "checking for pthread_create in -lpthreads""... $ac_c" 1>&6
-echo "configure:5723: checking for pthread_create in -lpthreads" >&5
+echo "configure:5728: checking for pthread_create in -lpthreads" >&5
 echo "
     #include <pthread.h> 
     void *foo(void *v) { return v; } 
@@ -5741,7 +5746,7 @@
         echo "$ac_t""no" 1>&6
         
 echo $ac_n "checking for pthread_create in -lpthread""... $ac_c" 1>&6
-echo "configure:5745: checking for pthread_create in -lpthread" >&5
+echo "configure:5750: checking for pthread_create in -lpthread" >&5
 echo "
     #include <pthread.h> 
     void *foo(void *v) { return v; } 
@@ -5763,7 +5768,7 @@
         echo "$ac_t""no" 1>&6
         
 echo $ac_n "checking for pthread_create in -lc_r""... $ac_c" 1>&6
-echo "configure:5767: checking for pthread_create in -lc_r" >&5
+echo "configure:5772: checking for pthread_create in -lc_r" >&5
 echo "
     #include <pthread.h> 
     void *foo(void *v) { return v; } 
@@ -5785,7 +5790,7 @@
         echo "$ac_t""no" 1>&6
         
 echo $ac_n "checking for pthread_create in -lc""... $ac_c" 1>&6
-echo "configure:5789: checking for pthread_create in -lc" >&5
+echo "configure:5794: checking for pthread_create in -lc" >&5
 echo "
     #include <pthread.h> 
     void *foo(void *v) { return v; } 
@@ -5903,7 +5908,7 @@
       rm -f conftest*
    ac_cv_have_dash_pthread=no
    echo $ac_n "checking whether ${CC-cc} accepts -pthread""... $ac_c" 1>&6
-echo "configure:5907: checking whether ${CC-cc} accepts -pthread" >&5
+echo "configure:5912: checking whether ${CC-cc} accepts -pthread" >&5
    echo 'int main() { return 0; }' | cat > conftest.c
    ${CC-cc} -pthread -o conftest conftest.c > conftest.out 2>&1
    if test $? -eq 0; then
@@ -5926,7 +5931,7 @@
 			    ac_cv_have_dash_pthreads=no
     if test "$ac_cv_have_dash_pthread" = "no"; then
 	    echo $ac_n "checking whether ${CC-cc} accepts -pthreads""... $ac_c" 1>&6
-echo "configure:5930: checking whether ${CC-cc} accepts -pthreads" >&5
+echo "configure:5935: checking whether ${CC-cc} accepts -pthreads" >&5
     	echo 'int main() { return 0; }' | cat > conftest.c
 	    ${CC-cc} -pthreads -o conftest conftest.c > conftest.out 2>&1
     	if test $? -eq 0; then
@@ -6265,6 +6270,136 @@
 
 
 
+# Check whether --with-system-val or --without-system-val was given.
+if test "${with_system_val+set}" = set; then
+  withval="$with_system_val"
+  :
+else
+  with_system_val=no
+fi
+
+
+# Check whether --with-system-openssl or --without-system-openssl was given.
+if test "${with_system_openssl+set}" = set; then
+  withval="$with_system_openssl"
+  :
+else
+  with_system_openssl=no
+fi
+
+
+VAL_LIBS=""
+OPENSSL_LIBS=""
+if test "x$with_system_val" != xno; then
+  if test -n "$_WIN32_MSVC"; then
+    VAL_LIBS="libval-threads.a libsres.a libcrypto.a libpthread.dll.a libgcc.a user32.lib gdi32.lib Ws2_32.lib"
+    cat >> confdefs.h <<\EOF
+#define MOZ_DNSSEC 1
+EOF
+
+  else
+    if test -n "$with_system_val"; then
+      CFLAGS="$CFLAGS -I${with_system_val}/include"
+      LDFLAGS="$LDFLAGS -L${with_system_val}/lib"
+    fi
+    if test "x$with_system_openssl" != xno; then
+        if test -n "$with_system_openssl"; then
+            CFLAGS="$CFLAGS -I${with_system_openssl}/include"
+            LDFLAGS="$LDFLAGS -L${with_system_openssl}/lib" 
+        fi
+    fi
+    echo $ac_n "checking for EVP_md5 in -lcrypto""... $ac_c" 1>&6
+echo "configure:6313: checking for EVP_md5 in -lcrypto" >&5
+ac_lib_var=`echo crypto'_'EVP_md5 | sed 'y%./+-%__p_%'`
+if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
+  echo $ac_n "(cached) $ac_c" 1>&6
+else
+  ac_save_LIBS="$LIBS"
+LIBS="-lcrypto  $LIBS"
+cat > conftest.$ac_ext <<EOF
+#line 6321 "configure"
+#include "confdefs.h"
+/* Override any gcc2 internal prototype to avoid an error.  */
+/* We use char because int might match the return type of a gcc2
+    builtin and then its argument prototype would still apply.  */
+char EVP_md5();
+
+int main() {
+EVP_md5()
+; return 0; }
+EOF
+if { (eval echo configure:6332: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+  rm -rf conftest*
+  eval "ac_cv_lib_$ac_lib_var=yes"
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  eval "ac_cv_lib_$ac_lib_var=no"
+fi
+rm -f conftest*
+LIBS="$ac_save_LIBS"
+
+fi
+if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
+  echo "$ac_t""yes" 1>&6
+  OPENSSL_LIBS="-lcrypto"
+else
+  echo "$ac_t""no" 1>&6
+fi
+
+    echo $ac_n "checking for val_gethostbyname in -lval-threads""... $ac_c" 1>&6
+echo "configure:6353: checking for val_gethostbyname in -lval-threads" >&5
+ac_lib_var=`echo val-threads'_'val_gethostbyname | sed 'y%./+-%__p_%'`
+if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
+  echo $ac_n "(cached) $ac_c" 1>&6
+else
+  ac_save_LIBS="$LIBS"
+LIBS="-lval-threads -lsres ${OPENSSL_LIBS} ${_PTHREAD_LDFLAGS} $LIBS"
+cat > conftest.$ac_ext <<EOF
+#line 6361 "configure"
+#include "confdefs.h"
+/* Override any gcc2 internal prototype to avoid an error.  */
+/* We use char because int might match the return type of a gcc2
+    builtin and then its argument prototype would still apply.  */
+char val_gethostbyname();
+
+int main() {
+val_gethostbyname()
+; return 0; }
+EOF
+if { (eval echo configure:6372: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+  rm -rf conftest*
+  eval "ac_cv_lib_$ac_lib_var=yes"
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  eval "ac_cv_lib_$ac_lib_var=no"
+fi
+rm -f conftest*
+LIBS="$ac_save_LIBS"
+
+fi
+if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
+  echo "$ac_t""yes" 1>&6
+  VAL_LIBS="-lval-threads -lsres ${OPENSSL_LIBS} ${_PTHREAD_LDFLAGS}"
+         cat >> confdefs.h <<\EOF
+#define MOZ_DNSSEC 1
+EOF
+
+else
+  echo "$ac_t""no" 1>&6
+fi
+
+  fi
+fi
+LIBS="$LIBS $VAL_LIBS"
+NSPR_LIBS="$NSPR_LIBS $VAL_LIBS"
+
+
+
+
 
 
 
@@ -6493,7 +6628,7 @@
 s%\]%\\&%g
 s%\$%$$%g
 EOF
-DEFS=`sed -f conftest.defs confdefs.h | tr '\012' ' ' | tr '\015' ' '` # Manually modified for MKS support.
+DEFS=`sed -f conftest.defs confdefs.h | tr '\012' ' '`
 rm -f conftest.defs
 
 
@@ -6598,6 +6733,8 @@
 s%@CPP@%$CPP%g
 s%@PERL@%$PERL%g
 s%@CCACHE@%$CCACHE%g
+s%@VAL_LIBS@%$VAL_LIBS%g
+s%@MOZ_DNSSEC@%$MOZ_DNSSEC%g
 s%@SHELL_OVERRIDE@%$SHELL_OVERRIDE%g
 s%@MOZILLA_CLIENT@%$MOZILLA_CLIENT%g
 s%@HOST_CFLAGS@%$HOST_CFLAGS%g
diff -r 630b62652f17 nsprpub/configure.in
--- a/nsprpub/configure.in	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/configure.in	Tue May 31 11:08:56 2011 -0400
@@ -2482,7 +2482,6 @@
 dnl AC_CHECK_LIB(thread, main)
 dnl AC_CHECK_LIB(vms_jackets, main)
 
-
 dnl We don't want anything to link with libdl even if it's present on OS X, 
 dnl since it's not used and not part of the default installation.
 dnl The same goes for BeOS.
@@ -3020,6 +3019,51 @@
     WRAP_MALLOC_LIB=$withval)
 
 dnl ========================================================
+dnl = Add DNSSEC support 
+dnl ========================================================
+
+AC_ARG_WITH(system-val,
+[  --with-system-val[=PFX] 
+                  Use system DNSSEC validator [installed at prefix PFX]],
+   ,
+   [with_system_val=no])
+
+AC_ARG_WITH(system-openssl,
+[  --with-system-openssl[=PFX]
+                  Use system openssl libraries [installed at prefix PFX]],
+   ,
+   [with_system_openssl=no])
+
+VAL_LIBS=""
+OPENSSL_LIBS=""
+if test "x$with_system_val" != xno; then
+  if test -n "$_WIN32_MSVC"; then
+    VAL_LIBS="libval-threads.a libsres.a libcrypto.a libpthread.dll.a libgcc.a user32.lib gdi32.lib Ws2_32.lib"
+    AC_DEFINE(MOZ_DNSSEC)
+  else
+    if test -n "$with_system_val"; then
+      CFLAGS="$CFLAGS -I${with_system_val}/include"
+      LDFLAGS="$LDFLAGS -L${with_system_val}/lib"
+    fi
+    if test "x$with_system_openssl" != xno; then
+        if test -n "$with_system_openssl"; then
+            CFLAGS="$CFLAGS -I${with_system_openssl}/include"
+            LDFLAGS="$LDFLAGS -L${with_system_openssl}/lib" 
+        fi
+    fi
+    AC_CHECK_LIB(crypto, EVP_md5, OPENSSL_LIBS="-lcrypto")
+    AC_CHECK_LIB(val-threads, val_gethostbyname,
+        [VAL_LIBS="-lval-threads -lsres ${OPENSSL_LIBS} ${_PTHREAD_LDFLAGS}"
+         AC_DEFINE(MOZ_DNSSEC)], ,
+        -lsres ${OPENSSL_LIBS} ${_PTHREAD_LDFLAGS})
+  fi
+fi
+LIBS="$LIBS $VAL_LIBS"
+NSPR_LIBS="$NSPR_LIBS $VAL_LIBS"
+AC_SUBST(VAL_LIBS)
+AC_SUBST(MOZ_DNSSEC)
+
+dnl ========================================================
 dnl Substitution of found variables.
 dnl ========================================================
 AC_SUBST(SHELL_OVERRIDE)
diff -r 630b62652f17 nsprpub/pr/include/prerr.h
--- a/nsprpub/pr/include/prerr.h	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/include/prerr.h	Tue May 31 11:08:56 2011 -0400
@@ -272,8 +272,14 @@
 /* The one-time function was previously called and failed. Its error code is no longer available */
 #define PR_CALL_ONCE_ERROR                       (-5925L)
 
+/* The DNS record failed DNSSEC validation */
+#define PR_DNSSEC_VALIDATION_ERROR               (-5924L)
+
+/* The DNS record failed DNSSEC validation */
+#define PR_DNSSEC_DNE_ERROR                      (-5923L)
+
 /* Placeholder for the end of the list */
-#define PR_MAX_ERROR                             (-5924L)
+#define PR_MAX_ERROR                             (-5922L)
 
 extern void nspr_InitializePRErrorTable(void);
 #define ERROR_TABLE_BASE_nspr (-6000L)
diff -r 630b62652f17 nsprpub/pr/include/prnetdb.h
--- a/nsprpub/pr/include/prnetdb.h	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/include/prnetdb.h	Tue May 31 11:08:56 2011 -0400
@@ -85,6 +85,14 @@
 #define PR_NETDB_BUF_SIZE 1024
 #endif
 
+enum 
+{
+  PR_DNSSEC_NO_FLAGS = 0,
+  PR_DNSSEC_IS_TRUSTED = 1 << 0,
+  PR_DNSSEC_IS_VALIDATED = 1 << 1,
+  PR_DNSSEC_IS_UNTRUSTED = 1 << 2
+};
+
 /***********************************************************************
 ** FUNCTION:	
 ** DESCRIPTION:	PR_GetHostByName()
@@ -111,6 +119,34 @@
 
 /***********************************************************************
 ** FUNCTION:	
+** DESCRIPTION:	PR_GetHostByNameExtended()
+** Lookup a host by name and provide extended error information
+**
+** INPUTS:
+**  char *hostname      Character string defining the host name of interest
+**  char *buf           A scratch buffer for the runtime to return result.
+**                      This buffer is allocated by the caller.
+**  PRIntn bufsize      Number of bytes in 'buf'. A recommnded value to
+**                      use is PR_NETDB_BUF_SIZE.
+** OUTPUTS:
+**  PRHostEnt *hostentry
+**                      This structure is filled in by the runtime if
+**                      the function returns PR_SUCCESS. This structure
+**                      is allocated by the caller.
+** RETURN:
+**  PRStatus            PR_SUCCESS if the lookup succeeds. If it fails
+**                      the result will be PR_FAILURE and the reason
+**                      for the failure can be retrieved by PR_GetError().
+**                      This function is identical to the PR_GetHostByName
+**                      function but returns additional error codes via
+**                      PR_GetError() and may return even more in the future.
+***********************************************************************/
+NSPR_API(PRStatus) PR_GetHostByNameExtended(
+    const char *hostname, char *buf, PRIntn bufsize, PRHostEnt *hostentry,
+    PRUint16 *security_flags);
+
+/***********************************************************************
+** FUNCTION:	
 ** DESCRIPTION:	PR_GetIPNodeByName()
 ** Lookup a host by name. Equivalent to getipnodebyname(AI_DEFAULT)
 ** of RFC 2553.
@@ -153,6 +189,44 @@
 
 /***********************************************************************
 ** FUNCTION:	
+** DESCRIPTION:	PR_GetIPNodeByNameExtended()
+** Lookup a host by name. Equivalent to getipnodebyname(AI_DEFAULT)
+** of RFC 2553.
+**
+** INPUTS:
+**  char *hostname      Character string defining the host name of interest
+**  PRUint16 af         Address family (either PR_AF_INET or PR_AF_INET6)
+**  PRIntn flags        Specifies the types of addresses that are searched
+**                      for and the types of addresses that are returned.
+**                      The only supported flag is PR_AI_DEFAULT.
+**  char *buf           A scratch buffer for the runtime to return result.
+**                      This buffer is allocated by the caller.
+**  PRIntn bufsize      Number of bytes in 'buf'. A recommnded value to
+**                      use is PR_NETDB_BUF_SIZE.
+** OUTPUTS:
+**  PRHostEnt *hostentry
+**                      This structure is filled in by the runtime if
+**                      the function returns PR_SUCCESS. This structure
+**                      is allocated by the caller.
+** RETURN:
+**  PRStatus            PR_SUCCESS if the lookup succeeds. If it fails
+**                      the result will be PR_FAILURE and the reason
+**                      for the failure can be retrieved by PR_GetError().
+**                      This function is identical to the PR_GetIPNodeByName
+**                      function but returns additional error codes via
+**                      PR_GetError() and may return even more in the future.
+***********************************************************************/
+NSPR_API(PRStatus) PR_GetIPNodeByNameExtended(
+    const char *hostname,
+    PRUint16 af,
+    PRIntn flags,
+    char *buf,
+    PRIntn bufsize,
+    PRHostEnt *hostentry);
+
+
+/***********************************************************************
+** FUNCTION:	
 ** DESCRIPTION:	PR_GetHostByAddr()
 ** Lookup a host entry by its network address.
 **
@@ -417,6 +491,33 @@
 
 /***********************************************************************
 ** FUNCTION:
+** DESCRIPTION: PR_GetAddrInfoByNameExtended()
+**  Lookup a host by name. Equivalent to getaddrinfo(host, NULL, ...) of
+**  RFC 3493.
+**
+** INPUTS:
+**  char *hostname      Character string defining the host name of interest
+**  PRUint16 af         May be PR_AF_UNSPEC or PR_AF_INET.
+**  PRIntn flags        May be either PR_AI_ADDRCONFIG or
+**                      PR_AI_ADDRCONFIG | PR_AI_NOCANONNAME. Include
+**                      PR_AI_NOCANONNAME to suppress the determination of
+**                      the canonical name corresponding to hostname.
+** RETURN:
+**  PRAddrInfo*         Handle to a data structure containing the results
+**                      of the host lookup. Use PR_EnumerateAddrInfo to
+**                      inspect the PRNetAddr values stored in this object.
+**                      When no longer needed, this handle must be destroyed
+**                      with a call to PR_FreeAddrInfo.  If a lookup error
+**                      occurs, then NULL will be returned.
+**                      This function is identical to the PR_GetAddrInfoByNameFB
+**                      function but returns additional error codes via
+**                      PR_GetError() and may return even more in the future.
+***********************************************************************/
+NSPR_API(PRAddrInfo*) PR_GetAddrInfoByNameExtended(
+    const char *hostname, PRUint16 af, PRIntn flags, PRUint16 *security_flags);
+
+/***********************************************************************
+** FUNCTION:
 ** DESCRIPTION: PR_FreeAddrInfo()
 **  Destroy the PRAddrInfo handle allocated by PR_GetAddrInfoByName().
 **
@@ -494,6 +595,15 @@
 NSPR_API(PRUint32) PR_htonl(PRUint32);
 NSPR_API(PRUint64) PR_htonll(PRUint64);
 
+/***********************************************************************
+** FUNCTIONS: PR_set_dnssec_validate_policy
+**
+** DESCRIPTION: set the DNS resolution policy
+**  
+**   XXX
+***********************************************************************/
+NSPR_API(void) PR_set_dnssec_validate_policy(PRInt32);
+
 PR_END_EXTERN_C
 
 #endif /* prnetdb_h___ */
diff -r 630b62652f17 nsprpub/pr/src/Makefile.in
--- a/nsprpub/pr/src/Makefile.in	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/src/Makefile.in	Tue May 31 11:08:56 2011 -0400
@@ -213,7 +213,7 @@
 OS_LIBS		= -framework CoreServices -framework CoreFoundation
 endif
 
-EXTRA_LIBS += $(OS_LIBS)
+EXTRA_LIBS += $(OS_LIBS) $(VAL_LIBS)
 
 #
 # Define platform-dependent OBJS
diff -r 630b62652f17 nsprpub/pr/src/misc/prerr.c
--- a/nsprpub/pr/src/misc/prerr.c	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/src/misc/prerr.c	Tue May 31 11:08:56 2011 -0400
@@ -118,11 +118,13 @@
 	{"PR_HOST_UNREACHABLE_ERROR",    "Host is unreachable"},
 	{"PR_LIBRARY_NOT_LOADED_ERROR",    "The library is not loaded"},
 	{"PR_CALL_ONCE_ERROR",    "The one-time function was previously called and failed. Its error code is no longer available"},
+	{"PR_DNSSEC_VALIDATION_ERROR",    "The DNS record failed DNSSEC validation"},
+	{"PR_DNSSEC_DNE_ERROR",    "The DNS record does not exist"},
 	{"PR_MAX_ERROR",    "Placeholder for the end of the list"},
 	{0, 0}
 };
 
-static const struct PRErrorTable et = { text, "prerr", -6000L, 77 };
+static const struct PRErrorTable et = { text, "prerr", -6000L, 79 };
 
 void nspr_InitializePRErrorTable(void) {
     PR_ErrorInstallTable(&et);
diff -r 630b62652f17 nsprpub/pr/src/misc/prerr.et
--- a/nsprpub/pr/src/misc/prerr.et	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/src/misc/prerr.et	Tue May 31 11:08:56 2011 -0400
@@ -134,6 +134,8 @@
 ec PR_HOST_UNREACHABLE_ERROR,   "Host is unreachable"
 ec PR_LIBRARY_NOT_LOADED_ERROR, "The library is not loaded"
 ec PR_CALL_ONCE_ERROR, "The one-time function was previously called and failed. Its error code is no longer available"
+ec PR_DNSSEC_VALIDATION_ERROR,  "The DNS record failed DNSSEC validation"
+ec PR_DNSSEC_DNE_ERROR,         "The DNS record does not exist"
 
 ec PR_MAX_ERROR,                "Placeholder for the end of the list"
 
diff -r 630b62652f17 nsprpub/pr/src/misc/prerr.properties
--- a/nsprpub/pr/src/misc/prerr.properties	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/src/misc/prerr.properties	Tue May 31 11:08:56 2011 -0400
@@ -114,4 +114,6 @@
 PR_HOST_UNREACHABLE_ERROR=Host is unreachable
 PR_LIBRARY_NOT_LOADED_ERROR=The library is not loaded
 PR_CALL_ONCE_ERROR=The one-time function was previously called and failed. Its error code is no longer available
+PR_DNSSEC_VALIDATION_ERROR=The DNS record failed DNSSEC validation
+PR_DNSSEC_DNE_ERROR=The DNS record does not exist
 PR_MAX_ERROR=Placeholder for the end of the list
diff -r 630b62652f17 nsprpub/pr/src/misc/prnetdb.c
--- a/nsprpub/pr/src/misc/prnetdb.c	Tue May 31 12:17:48 2011 +0200
+++ b/nsprpub/pr/src/misc/prnetdb.c	Tue May 31 11:08:56 2011 -0400
@@ -35,6 +35,18 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
+#ifdef MOZ_DNSSEC
+#ifdef WIN32
+#ifndef WIN32_LEAN_AND_MEAN
+#define WIN32_LEAN_AND_MEAN
+#endif
+#include <winsock2.h>
+#include <ws2tcpip.h>
+#endif
+//#include <netdb.h>
+#include <validator/validator.h>
+#endif
+
 #include "primpl.h"
 
 #include <string.h>
@@ -656,6 +668,226 @@
 }
 #endif /* !defined(_PR_HAVE_GETPROTO_R) */
 
+#define DNSSEC_FAILURE 0
+#define DNSSEC_SUCCESS 1
+/* START DNSSEC INTERNAL */
+#define DODNSSECDEBUG
+#ifdef DODNSSECDEBUG
+#define DNSSECDEBUG(x) fprintf x;
+#define DNSSECFUNBEGIN()                        \
+  {                                             \
+    fprintf(stderr, "vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\n"); \
+    fprintf(stderr, "BEGIN  %s:%d: \n  ", __FUNCTION__, __LINE__);       \
+  }
+#define DNSSECFUNDEBUG(x) { DNSSECFUNBEGIN(); DNSSECDEBUG(x); }
+#define DNSSECFUNEXIT()   {                                             \
+    fprintf(stderr, "EXIT   %s:%d:  \n", __FUNCTION__, __LINE__);          \
+    fprintf(stderr, "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"); \
+  }
+#define DNSSECFUNRETURN(retval)    \
+  {                                             \
+    DNSSECDEBUG((stderr, "  returning: %x", (unsigned int) retval));    \
+    if ((int) retval == DNSSEC_SUCCESS) {                                \
+      DNSSECDEBUG((stderr, "  (success)"));                             \
+    } else if ((int) retval == DNSSEC_SUCCESS || (int) retval == -1) {   \
+      DNSSECDEBUG((stderr, "  (FAIL)"));                                \
+    }                                                                   \
+    DNSSECDEBUG((stderr, "\n"));						    \
+    DNSSECFUNEXIT();                                                    \
+    return retval;                                                      \
+  }
+#define DNSSECFUNPTRRETURN(retval)    \
+  {                                             \
+    if (retval == NULL) {                                \
+      DNSSECDEBUG((stderr, "  returning (NULL)"));                      \
+    } else {                                                            \
+      DNSSECDEBUG((stderr, "  returning (non-NULL)"));                  \
+    }                                                                   \
+    DNSSECDEBUG((stderr, "\n"));					            	    \
+    DNSSECFUNEXIT();                                                    \
+    return retval;                                                      \
+  }
+#else
+#define DNSSECDEBUG(x) 
+#define DNSSECFUNDEBUG(x) 
+#define DNSSECFUNEXIT()
+#define DNSSECFUNRETURN(retval) return retval;
+#define DNSSECFUNPTRRETURN(retval) return retval;
+#endif
+/* END DNSSEC INTERNAL */
+
+
+/* 0 = enforce system policy, 1 = ignore, 2 = always secure */
+int global_policy = 0;
+#define DNSSEC_POLICY_ENFORCE_SYS_POLICY 0
+#define DNSSEC_POLICY_IGNORE              1
+#define DNSSEC_POLICY_ALWAYS_SECURE       2
+void
+PR_set_dnssec_validate_policy(int policy)
+{
+  DNSSECFUNDEBUG((stderr, "DNSSEC Setting policy: %d\n", policy));
+  global_policy = policy;
+}
+
+#if 0
+#ifdef MOZ_DNSSEC
+/* XXX: include drop or configurize */
+//#include <stdio.h>
+//#include <netdb.h>
+
+/* prototypes */
+int dnssec_check_policy(val_status_t dnssec_status, int policytype);
+/**
+ * dnssec_validate(HOSTNAME)
+ *
+ * attempts to validate HOSTNAME using dnssec.  It will return one of:
+ *
+ * If global_policy = DNSSEC_POLICY_IGNORE
+ *    - DNSSEC_SUCCESS: 
+ *
+ * If global_policy = DNSSEC_POLICY_ENFORCE_SYS_POLICY
+ *    - DNSSEC_SUCCESS if verified
+ *    - DNSSEC_FAILURE if not
+ *
+ * If global_policy = DNSSEC_POLICY_ENFORCE_SYS_POLICY
+ *    - DNSSEC_SUCCESS if verified
+ *    - DNSSEC_FAILURE if not
+ */
+/* XXX: pass in address type? */
+int dnssec_validate (const char *domain_name) {
+    int dnssec_status;
+    struct hostent hentry, *hentryp;
+    char buf[1024];
+    size_t buflen = sizeof(buf);
+    int t_errno;
+    val_status_t val_status;
+
+    DNSSECFUNDEBUG((stderr, "DNSSECvalidating: %s\n", domain_name));
+    
+    /* don't even bother validating when the policy doesn't call for it */
+    if (global_policy == DNSSEC_POLICY_IGNORE) {
+        DNSSECDEBUG((stderr, "  OK: policy is always allow\n"));
+        DNSSECFUNRETURN(DNSSEC_SUCCESS);
+    }
+
+    /* explicitly catch localhost */
+    if (strcmp(domain_name, "localhost") == 0) {
+        DNSSECDEBUG((stderr, "  OK: 'localhost' is always allowed\n"));
+        DNSSECFUNRETURN(DNSSEC_SUCCESS);
+    }
+    
+    /* attempt a lookup */
+    dnssec_status = val_gethostbyname_r(NULL, domain_name, &hentry,
+                                        buf, buflen,&hentryp, &t_errno,
+                                        &val_status);
+
+    /* check the results, or assume indeterminate if we don't know why
+       the above failed */
+    DNSSECDEBUG((stderr, "  val_gethostbyname returned %d,val_st=%d,errno=%d,ptr=%x\n", dnssec_status, val_status, t_errno, (unsigned int) hentryp));
+    if (!hentryp && val_status == VAL_DONT_KNOW)  // Should never happen?
+        val_status = VAL_BOGUS;
+
+    DNSSECDEBUG((stderr, "  val_gethostbyname's dnssec status was %d\n", dnssec_status));
+
+    if (dnssec_check_policy(val_status, global_policy) == DNSSEC_SUCCESS)
+        DNSSECFUNRETURN(DNSSEC_SUCCESS);
+
+    DNSSECFUNRETURN(DNSSEC_FAILURE);
+}
+
+struct hostent *
+dnssec_gethostbyname(const char *name,
+                     struct hostent *ret, char *buf, size_t buflen,
+                     struct hostent **result, int *h_errnop)
+{
+  val_status_t val_status;
+  int ret_stat;
+  
+  DNSSECFUNDEBUG((stderr, "input: name=%s\n", name));
+  ret_stat = val_gethostbyname_r(NULL, name, ret, buf, buflen, result, h_errnop,
+                                 &val_status);
+  if (!ret_stat) {
+    DNSSECDEBUG((stderr, "  ERROR: ret_stat=%d returned\n", ret_stat));
+    DNSSECFUNRETURN(NULL);
+  }
+  
+  if (dnssec_check_policy(val_status, global_policy) == DNSSEC_SUCCESS) {
+    DNSSECDEBUG((stderr, "  policy = success\n"));
+    DNSSECFUNRETURN(ret);
+  }
+  /* XXX: if ret exists (but policy says no), free it? */
+  DNSSECDEBUG((stderr, "  failed to lookup host\n"));
+  DNSSECFUNRETURN(NULL);
+}
+
+struct hostent *
+dnssec_gethostbyname2(const char *name, int af,
+                     struct hostent *ret, char *buf, size_t buflen,
+                     struct hostent **result, int *h_errnop)
+{
+  val_status_t val_status;
+  int ret_stat;
+  
+  DNSSECFUNDEBUG((stderr, "input: name=%s\n", name));
+  ret_stat = val_gethostbyname2_r(NULL, name, af, 
+                                  ret, buf, buflen, result, h_errnop,
+                                  &val_status);
+  if (!ret_stat) {
+    DNSSECDEBUG((stderr, "  ERROR: ret_stat=%d returned\n", ret_stat));
+    DNSSECFUNRETURN(NULL);
+  }
+  
+  if (dnssec_check_policy(val_status, global_policy) == DNSSEC_SUCCESS) {
+    DNSSECDEBUG((stderr, "  policy = success\n"));
+    DNSSECFUNRETURN(ret);
+  }
+  /* XXX: if ret exists (but policy says no), free it? */
+  DNSSECDEBUG((stderr, "  failed to lookup host\n"));
+  DNSSECFUNRETURN(NULL);
+}
+
+#else  /* !MOZ_DNSSEC */
+
+int dnssec_validate (const char *domain_name) {
+  return DNSSEC_SUCCESS;
+}
+
+#endif /* !MOZ_DNSSEC */
+#endif /* if 0 */
+
+#ifdef MOZ_DNSSEC
+int
+dnssec_check_policy(val_status_t val_status, int policytype) 
+{
+  DNSSECFUNDEBUG((stderr, "input: policy=%d, status=%d = %s\n", policytype, val_status, p_val_error(val_status)));
+
+  /*
+   * POLICY: ignore errors
+   */
+  if (policytype == DNSSEC_POLICY_IGNORE)
+      DNSSECFUNRETURN(DNSSEC_SUCCESS);
+
+  /*
+   * POLICY: require only when possible
+   *   -- IE, trust the policy specified in dnssec-tools's dnsval.conf
+   */
+  if (policytype == DNSSEC_POLICY_ENFORCE_SYS_POLICY) {
+    if (val_istrusted(val_status))
+        DNSSECFUNRETURN(DNSSEC_SUCCESS);
+    DNSSECFUNRETURN(DNSSEC_FAILURE);
+  }
+  
+  /*
+   * POLICY: always secure.
+   *    -- IE, require all lookups to return only secure results
+   */
+  
+  if (val_isvalidated(val_status))
+      DNSSECFUNRETURN(DNSSEC_SUCCESS);
+  DNSSECFUNRETURN(DNSSEC_FAILURE);
+}
+#endif
+
 /*
  * #################################################################
  * NOTE: tmphe, tmpbuf, bufsize, h, and h_err are local variables
@@ -691,21 +923,70 @@
 
 #endif  /* definition of GETHOSTBYXXX */
 
-PR_IMPLEMENT(PRStatus) PR_GetHostByName(
-    const char *name, char *buf, PRIntn bufsize, PRHostEnt *hp)
+/* override functions if MOZ_DNSSEC is enabled */
+#ifdef MOZ_DNSSEC
+
+/* We do this in a special section to allow the GETHOSTBYADDR to be
+   pulled above as normal.  Unfortunately, even though the DNSSEC APIs
+   are thread safe, if GETHOSTBYADDR is not then we'll still perform
+   safe locking because this code doesn't differentiate between calls
+   at all.
+*/
+#undef GETHOSTBYNAME
+#undef GETHOSTBYNAME2
+
+#define GETHOSTBYNAME(name) val_gethostbyname(NULL, name, &val_status)
+#define GETHOSTBYNAME2(name, af) val_gethostbyname2(NULL, name, af, &val_status)
+ 
+#if 0
+#define GETHOSTBYNAME(name) \
+    (dnssec_gethostbyname(name, &tmphe, tmpbuf, bufsize, &h, &h_err), h)
+#define GETHOSTBYNAME2(name, af)                                           \
+  (dnssec_gethostbyname2(name, af, &tmphe, tmpbuf, bufsize, &h, &h_err), h)
+#endif
+
+#endif /* MOZ_DNSSEC */
+
+/* note: not DNSSEC specific, but only currently needed for DNSSEC */
+/* converts a return value from one which may include other (newer)
+   DNS error codes like those provided by DNSSEC validation to
+   something which older code can still understand */
+static void simplify_return_value(void)
+{
+  PRErrorCode errcode = PR_GetError();
+  switch(errcode) {
+    /* Pass the original codes */
+  case PR_DNSSEC_VALIDATION_ERROR:
+    PR_SetError(PR_DIRECTORY_LOOKUP_ERROR, 0);
+    break;
+  case PR_DNSSEC_DNE_ERROR:
+    PR_SetError(PR_DIRECTORY_LOOKUP_ERROR, 0);
+    break;
+  default:
+    /* everything else can pass on as before */
+    break;
+  }
+}
+
+PR_IMPLEMENT(PRStatus) PR_GetHostByNameExtended(
+    const char *name, char *buf, PRIntn bufsize, PRHostEnt *hp,
+    PRUint16 *security_flags)
 {
 	struct hostent *h;
 	PRStatus rv = PR_FAILURE;
-#if defined(_PR_HAVE_GETHOST_R)
+    _PRIPAddrConversion conversion;
+#if defined(_PR_HAVE_GETHOST_R) || defined(MOZ_DNSSEC)
     char localbuf[PR_NETDB_BUF_SIZE];
-    char *tmpbuf;
+    char *tmpbuf = localbuf;
     struct hostent tmphe;
     int h_err;
+    val_status_t val_status;
 #endif
 
     if (!_pr_initialized) _PR_ImplicitInitialization();
+    DNSSECFUNDEBUG((stderr, "input=%s\n", name));
 
-#if defined(_PR_HAVE_GETHOST_R)
+#if defined(_PR_HAVE_GETHOST_R) || defined(MOZ_DNSSEC)
     tmpbuf = localbuf;
     if (bufsize > sizeof(localbuf))
     {
@@ -713,7 +994,7 @@
         if (NULL == tmpbuf)
         {
             PR_SetError(PR_OUT_OF_MEMORY_ERROR, 0);
-            return rv;
+            DNSSECFUNRETURN(rv);
         }
     }
 #endif
@@ -721,24 +1002,71 @@
 	LOCK_DNS();
 
 	h = GETHOSTBYNAME(name);
-    
+#ifdef MOZ_DNSSEC
+    { 
+          /* set the security flags to how the results were achieved */
+          if (security_flags) {
+            if (val_isvalidated(val_status))
+              *security_flags = PR_DNSSEC_IS_VALIDATED;
+            else if (val_istrusted(val_status))
+              *security_flags = PR_DNSSEC_IS_TRUSTED;
+            else
+              *security_flags = PR_DNSSEC_IS_UNTRUSTED;
+          }
+ 
+          if (dnssec_check_policy(val_status, global_policy) != DNSSEC_SUCCESS) {
+            /* DNSsec validation failed */
+            PR_SetErrorText(0, "Host DNSsec validation failed");
+            PR_SetError(PR_DNSSEC_VALIDATION_ERROR, 0);
+            DNSSECDEBUG((stderr, "DNSSECgetaddrinfo: returning failure line:%d %s => val_status:%d\n", 
+                        __LINE__, name, val_status));
+            DNSSECFUNRETURN(rv);
+          }
+
+          if (!h && val_does_not_exist(val_status)) {
+            /* DNSSEC has proven that the record does not exist; we
+               return a different error message to show that the lookup
+               succeeded and there is officially no results */
+            PR_SetErrorText(0, "Address does not exist");
+            PR_SetError(PR_DNSSEC_DNE_ERROR, 0);
+            DNSSECDEBUG((stderr, "DNSSECgetaddrinfo: returning DNE failure:%d %s => val_status:%d\n", 
+                        __LINE__, name, val_status));
+            DNSSECFUNRETURN(rv);
+          }
+   }
+#endif
+
+    /* XXX */
+    DNSSECDEBUG((stderr, "DNSSECgethostbyname results: host=%s h_errno=%d\n", name, h_errno));
 	if (NULL == h)
 	{
+        DNSSECDEBUG((stderr, "********** Status = LOOKUP_ERROR\n"));
 	    PR_SetError(PR_DIRECTORY_LOOKUP_ERROR, _MD_GETHOST_ERRNO());
 	}
 	else
 	{
-		_PRIPAddrConversion conversion = _PRIPAddrNoConversion;
+        DNSSECDEBUG((stderr, "********** Status = SUCCESS\n"));
+		conversion = _PRIPAddrNoConversion;
 		rv = CopyHostent(h, &buf, &bufsize, conversion, hp);
 		if (PR_SUCCESS != rv)
 		    PR_SetError(PR_INSUFFICIENT_RESOURCES_ERROR, 0);
 	}
 	UNLOCK_DNS();
-#if defined(_PR_HAVE_GETHOST_R)
+#if defined(_PR_HAVE_GETHOST_R) || defined(MOZ_DNSSEC)
     if (tmpbuf != localbuf)
         PR_Free(tmpbuf);
 #endif
-	return rv;
+    DNSSECFUNRETURN(rv);
+}
+
+PR_IMPLEMENT(PRStatus) PR_GetHostByName(
+    const char *name, char *buf, PRIntn bufsize, PRHostEnt *hp)
+{
+    PRStatus ret;
+    DNSSECFUNDEBUG((stderr, "input=%s\n", name));
+    ret = PR_GetHostByNameExtended(name, buf, bufsize, hp, NULL);
+    simplify_return_value();
+    return ret;
 }
 
 #if !defined(_PR_INET6) && \
@@ -823,17 +1151,18 @@
 }
 #endif
 
-PR_IMPLEMENT(PRStatus) PR_GetIPNodeByName(
+PR_IMPLEMENT(PRStatus) PR_GetIPNodeByNameExtended(
     const char *name, PRUint16 af, PRIntn flags,
     char *buf, PRIntn bufsize, PRHostEnt *hp)
 {
 	struct hostent *h = 0;
 	PRStatus rv = PR_FAILURE;
-#if defined(_PR_HAVE_GETHOST_R)
+#if defined(_PR_HAVE_GETHOST_R) || defined(MOZ_DNSSEC)
     char localbuf[PR_NETDB_BUF_SIZE];
-    char *tmpbuf;
+    char *tmpbuf = localbuf;
     struct hostent tmphe;
     int h_err;
+    val_status_t val_status;
 #endif
 #if defined(_PR_HAVE_GETIPNODEBYNAME)
 	PRUint16 md_af = af;
@@ -844,11 +1173,12 @@
     PRBool did_af_inet = PR_FALSE;
 #endif
 
+    DNSSECFUNDEBUG((stderr, "input=%s\n", name));
     if (!_pr_initialized) _PR_ImplicitInitialization();
 
     if (af != PR_AF_INET && af != PR_AF_INET6) {
         PR_SetError(PR_INVALID_ARGUMENT_ERROR, 0);
-        return PR_FAILURE;
+        DNSSECFUNRETURN(PR_FAILURE);
     }
 
 #if defined(_PR_INET6) && defined(_PR_HAVE_GETHOSTBYNAME2)
@@ -883,7 +1213,7 @@
     	md_af = af;
 #endif
 
-#if defined(_PR_HAVE_GETHOST_R)
+#if defined(_PR_HAVE_GETHOST_R) || defined(MOZ_DNSSEC)
     tmpbuf = localbuf;
     if (bufsize > sizeof(localbuf))
     {
@@ -891,11 +1221,13 @@
         if (NULL == tmpbuf)
         {
             PR_SetError(PR_OUT_OF_MEMORY_ERROR, 0);
-            return rv;
+            DNSSECFUNRETURN(rv);
         }
     }
 #endif
 
+    /* XXX: should be able to map gethostbyname2 -> getaddrinfo with hints */
+
     /* Do not need to lock the DNS lock if getipnodebyname() is called */
 #ifdef _PR_INET6
 #ifdef _PR_HAVE_GETHOSTBYNAME2
@@ -949,6 +1281,7 @@
     
 	if (NULL == h)
 	{
+      DNSSECDEBUG((stderr, "  lookup failed\n"));
 #if defined(_PR_INET6) && defined(_PR_HAVE_GETIPNODEBYNAME)
 	    PR_SetError(PR_DIRECTORY_LOOKUP_ERROR, error_num);
 #elif defined(_PR_INET6_PROBE) && defined(_PR_HAVE_GETIPNODEBYNAME)
@@ -1002,12 +1335,23 @@
     UNLOCK_DNS();
 #endif /* _PR_INET6 */
 
-#if defined(_PR_HAVE_GETHOST_R)
+#if defined(_PR_HAVE_GETHOST_R) || defined(MOZ_DNSSEC)
     if (tmpbuf != localbuf)
         PR_Free(tmpbuf);
 #endif
 
-	return rv;
+    DNSSECFUNRETURN(rv);
+}
+
+PR_IMPLEMENT(PRStatus) PR_GetIPNodeByName(
+    const char *name, PRUint16 af, PRIntn flags,
+    char *buf, PRIntn bufsize, PRHostEnt *hp)
+{
+  PRStatus ret;
+  DNSSECFUNDEBUG((stderr, "input=%s\n", name));
+  ret = PR_GetIPNodeByNameExtended(name, af, flags, buf, bufsize, hp);
+  simplify_return_value();
+  return ret;
 }
 
 PR_IMPLEMENT(PRStatus) PR_GetHostByAddr(
@@ -1029,6 +1373,7 @@
 	int error_num;
 #endif
 
+    DNSSECFUNDEBUG((stderr, "input=%x", (unsigned int) hostaddr));
     if (!_pr_initialized) _PR_ImplicitInitialization();
 
 	if (hostaddr->raw.family == PR_AF_INET6)
@@ -1167,7 +1512,7 @@
         PR_Free(tmpbuf);
 #endif
 
-	return rv;
+	DNSSECFUNRETURN(rv);
 }
 
 /******************************************************************************/
@@ -1864,9 +2209,11 @@
  * provide getaddrinfo in all versions that NSPR cares to support.
  */
 
+
+
 #if defined(_PR_HAVE_GETADDRINFO)
 
-#if defined(_PR_INET6)
+#if !defined(MOZ_DNSSEC) && defined(_PR_INET6)
 
 typedef struct addrinfo PRADDRINFO;
 #define GETADDRINFO getaddrinfo
@@ -1883,11 +2230,22 @@
 #else
 #define FUNC_MODIFIER
 #endif
+
+#if defined(MOZ_DNSSEC)
+typedef int (FUNC_MODIFIER * FN_GETADDRINFO)
+    (val_context_t * ctx,
+     const char *nodename,
+     const char *servname,
+     const PRADDRINFO *hints,
+     PRADDRINFO **res,
+     val_status_t * val_status);
+#else
 typedef int (FUNC_MODIFIER * FN_GETADDRINFO)
     (const char *nodename,
      const char *servname,
      const PRADDRINFO *hints,
      PRADDRINFO **res);
+#endif
 typedef int (FUNC_MODIFIER * FN_FREEADDRINFO)
     (PRADDRINFO *ai);
 typedef int (FUNC_MODIFIER * FN_GETNAMEINFO)
@@ -1900,7 +2258,12 @@
 static FN_FREEADDRINFO  _pr_freeaddrinfo  = NULL;
 static FN_GETNAMEINFO   _pr_getnameinfo   = NULL;
 
+#ifdef MOZ_DNSSEC
+typedef struct addrinfo DNSSECPRADDRINFO;
+#define GETADDRINFO_SYMBOL "val_getaddrinfo"
+#else
 #define GETADDRINFO_SYMBOL "getaddrinfo"
+#endif
 #define FREEADDRINFO_SYMBOL "freeaddrinfo"
 #define GETNAMEINFO_SYMBOL "getnameinfo"
 
@@ -1963,11 +2326,23 @@
 #endif
 }
 
+#if defined(MOZ_DNSSEC)
+#define GETADDRINFO(a,b,c,d) (*_pr_getaddrinfo)(NULL, a, b, c, d, &val_status)
+#else
 #define GETADDRINFO (*_pr_getaddrinfo)
+#endif
 #define FREEADDRINFO (*_pr_freeaddrinfo)
 #define GETNAMEINFO (*_pr_getnameinfo)
 
-#endif /* _PR_INET6 */
+#elif defined(MOZ_DNSSEC)
+typedef struct addrinfo PRADDRINFO;
+typedef struct addrinfo DNSSECPRADDRINFO;
+#define GETADDRINFO(a,b,c,d) val_getaddrinfo(NULL, a, b, c, d, &val_status)
+#define FREEADDRINFO freeaddrinfo
+//#define GETNAMEINFO(a,b,c,d,e,f,g) val_getnameinfo(NULL, a, b, c, d, e, f, g, &val_status)
+#define GETNAMEINFO getnameinfo
+
+#endif /* !defined(MOZ_DNSSEC) && defined(_PR_INET6) */
 
 #endif /* _PR_HAVE_GETADDRINFO */
 
@@ -1990,46 +2365,64 @@
 {
     PRStatus rv;
     PRAddrInfoFB *ai;
+    DNSSECFUNDEBUG((stderr, "input=%s", hostname));
     /* fallback on PR_GetHostByName */
     ai = PR_NEW(PRAddrInfoFB);
     if (!ai) {
         PR_SetError(PR_OUT_OF_MEMORY_ERROR, 0);
         return NULL;
     }
-    rv = PR_GetHostByName(hostname, ai->buf, sizeof ai->buf, &ai->hostent);
+    DNSSECDEBUG((stderr, "DNSSECgethostbyname: %d %s\n", __LINE__, hostname));
+    rv = PR_GetHostByNameExtended(hostname, ai->buf, sizeof ai->buf,
+                                  &ai->hostent, NULL);
     if (rv == PR_FAILURE) {
         PR_Free(ai);
-        return NULL;
+        DNSSECFUNPTRRETURN(NULL);
     }
     ai->has_cname = !(flags & PR_AI_NOCANONNAME);
 
-    return (PRAddrInfo *) ai;
+    DNSSECFUNRETURN((PRAddrInfo *) ai);
 }
 #endif /* !_PR_HAVE_GETADDRINFO || _PR_INET6_PROBE */
 
-PR_IMPLEMENT(PRAddrInfo *) PR_GetAddrInfoByName(const char  *hostname,
+PR_IMPLEMENT(PRAddrInfo *) PR_GetAddrInfoByNameExtended(const char  *hostname,
                                                 PRUint16     af,
-                                                PRIntn       flags)
+                                                PRIntn       flags,
+                                                PRUint16     *security_flags)
 {
+#ifdef MOZ_DNSSEC
+  val_status_t val_status;
+#endif
+    DNSSECFUNDEBUG((stderr, "input=%s\n", hostname));
+
+    /* wipe the security flags */
+    if (security_flags)
+        *security_flags = PR_DNSSEC_NO_FLAGS;
+    
     /* restrict input to supported values */
     if ((af != PR_AF_INET && af != PR_AF_UNSPEC) ||
         (flags & ~ PR_AI_NOCANONNAME) != PR_AI_ADDRCONFIG) {
         PR_SetError(PR_INVALID_ARGUMENT_ERROR, 0);
-        return NULL;
+        DNSSECFUNPTRRETURN(NULL);
     }
 
     if (!_pr_initialized) _PR_ImplicitInitialization();
 
 #if !defined(_PR_HAVE_GETADDRINFO)
-    return pr_GetAddrInfoByNameFB(hostname, af, flags);
+    DNSSECFUNPTRRETURN(pr_GetAddrInfoByNameFB(hostname, af, flags));
 #else
 #if defined(_PR_INET6_PROBE)
     if (!_pr_ipv6_is_present()) {
-        return pr_GetAddrInfoByNameFB(hostname, af, flags);
+      DNSSECFUNPTRRETURN(pr_GetAddrInfoByNameFB(hostname, af, flags));
     }
 #endif
     {
-        PRADDRINFO *res, hints;
+        PRADDRINFO hints;
+#if defined(MOZ_DNSSEC)
+        DNSSECPRADDRINFO *res;
+#else
+        PRADDRINFO *res;
+#endif
         PRStatus rv;
 
         /*
@@ -2083,15 +2476,69 @@
             rv = GETADDRINFO(hostname, NULL, &hints, &res);
         }
 #endif
-        if (rv == 0)
-            return (PRAddrInfo *) res;
+
+#ifdef MOZ_DNSSEC
+        DNSSECDEBUG((stderr, "### DNSSECgetaddrinfo returned: %d, val %d\n", (unsigned int) rv, val_status));
+        DNSSECDEBUG((stderr, "DNSSECgetaddrinfo returned: %d\n", (unsigned int) res));
+#endif
+
+#ifdef MOZ_DNSSEC
+        if (VAL_GETADDRINFO_HAS_STATUS(rv)) {
+          /* set the security flags to how the results were achieved */
+          if (security_flags) {
+            if (val_isvalidated(val_status))
+              *security_flags = PR_DNSSEC_IS_VALIDATED;
+            else if (val_istrusted(val_status))
+              *security_flags = PR_DNSSEC_IS_TRUSTED;
+            else
+              *security_flags = PR_DNSSEC_IS_UNTRUSTED;
+          }
+
+          if (dnssec_check_policy(val_status, global_policy) != DNSSEC_SUCCESS) {
+            /* DNSsec validation failed */
+            PR_SetErrorText(0, "Host DNSsec validation failed");
+            PR_SetError(PR_DNSSEC_VALIDATION_ERROR, 0);
+            DNSSECDEBUG((stderr, "DNSSECgetaddrinfo: returning failure line:%d %s => val_status:%d\n", 
+                        __LINE__, hostname, val_status));
+            if(res)
+              FREEADDRINFO(res);
+            DNSSECFUNPTRRETURN(NULL);
+          }
+
+          if (!res && val_does_not_exist(val_status)) {
+            /* DNSSEC has proven that the record does not exist; we
+               return a different error message to show that the lookup
+               succeeded and there is officially no results */
+            PR_SetErrorText(0, "Address does not exist");
+            PR_SetError(PR_DNSSEC_DNE_ERROR, 0);
+            DNSSECDEBUG((stderr, "DNSSECgetaddrinfo: returning DNE failure:%d %s => val_status:%d\n", 
+                        __LINE__, hostname, val_status));
+            DNSSECFUNPTRRETURN(NULL);
+          }
+        }
+#endif
+        if (rv == 0) {
+          DNSSECFUNPTRRETURN((PRAddrInfo *) res);
+        }
 
         PR_SetError(PR_DIRECTORY_LOOKUP_ERROR, rv);
     }
-    return NULL;
-#endif
+    DNSSECFUNPTRRETURN(NULL);
+#endif /*_PR_HAVE_GETADDRINFO*/
 }
 
+PR_IMPLEMENT(PRAddrInfo *) PR_GetAddrInfoByName(const char  *hostname,
+                                                PRUint16     af,
+                                                PRIntn       flags)
+{
+  struct PRAddrInfo *result;
+  DNSSECFUNDEBUG((stderr, "input=%s\n", hostname));
+  result = PR_GetAddrInfoByNameExtended(hostname, af, flags, NULL);
+  simplify_return_value();
+  DNSSECFUNPTRRETURN(result);
+}
+
+
 PR_IMPLEMENT(void) PR_FreeAddrInfo(PRAddrInfo *ai)
 {
 #if defined(_PR_HAVE_GETADDRINFO)
@@ -2100,7 +2547,11 @@
         PR_Free((PRAddrInfoFB *) ai);
     else
 #endif
+#if defined(MOZ_DNSSEC)
+        FREEADDRINFO((DNSSECPRADDRINFO *) ai);
+#else
         FREEADDRINFO((PRADDRINFO *) ai);
+#endif
 #else
     PR_Free((PRAddrInfoFB *) ai);
 #endif
@@ -2113,7 +2564,7 @@
 {
 #if defined(_PR_HAVE_GETADDRINFO)
     PRADDRINFO *ai;
-#if defined(_PR_INET6_PROBE)
+#if defined(_PR_INET6_PROBE) 
     if (!_pr_ipv6_is_present()) {
         /* using PRAddrInfoFB */
         PRIntn iter = (PRIntn)(PRPtrdiff) iterPtr;
@@ -2124,10 +2575,17 @@
     }
 #endif
 
+#if defined(MOZ_DNSSEC)
+    if (iterPtr)
+        ai = ((DNSSECPRADDRINFO *) iterPtr)->ai_next;
+    else
+        ai = (DNSSECPRADDRINFO *) base;
+#else
     if (iterPtr)
         ai = ((PRADDRINFO *) iterPtr)->ai_next;
     else
         ai = (PRADDRINFO *) base;
+#endif
 
     while (ai && ai->ai_addrlen > sizeof(PRNetAddr))
         ai = ai->ai_next;
@@ -2162,7 +2620,7 @@
 
 PR_IMPLEMENT(const char *) PR_GetCanonNameFromAddrInfo(const PRAddrInfo *ai)
 {
-#if defined(_PR_HAVE_GETADDRINFO)
+#if defined(_PR_HAVE_GETADDRINFO) 
 #if defined(_PR_INET6_PROBE)
     if (!_pr_ipv6_is_present()) {
         const PRAddrInfoFB *fb = (const PRAddrInfoFB *) ai;
@@ -2183,6 +2641,9 @@
     int rv;  /* 0 for success, or the error code EAI_xxx */
     PRNetAddr laddr;
     PRStatus status = PR_SUCCESS;
+#ifdef MOZ_DNSSEC
+    val_status_t val_status;
+#endif
 
     memset(&hints, 0, sizeof(hints));
     hints.ai_flags = AI_NUMERICHOST;
@@ -2224,11 +2685,12 @@
 {
     PRIntn rv;
 
+    DNSSECFUNDEBUG((stderr,"input=%s\n",string));
     rv = pr_inet_aton(string, &addr->inet.ip);
     if (1 == rv)
     {
         addr->raw.family = AF_INET;
-        return PR_SUCCESS;
+        DNSSECFUNRETURN(PR_SUCCESS);
     }
 
     PR_ASSERT(0 == rv);
@@ -2239,12 +2701,12 @@
     if (1 == rv)
     {
         addr->raw.family = PR_AF_INET6;
-        return PR_SUCCESS;
+        DNSSECFUNRETURN(PR_SUCCESS);;
     }
 
     PR_ASSERT(0 == rv);
     PR_SetError(PR_INVALID_ARGUMENT_ERROR, 0);
-    return PR_FAILURE;
+    DNSSECFUNRETURN(PR_FAILURE);
 }
 
 PR_IMPLEMENT(PRStatus) PR_StringToNetAddr(const char *string, PRNetAddr *addr)
@@ -2288,6 +2750,9 @@
     PRNetAddr addrcopy;
 #endif
     int rv;  /* 0 for success, or the error code EAI_xxx */
+#ifdef MOZ_DNSSEC
+    val_status_t val_status;
+#endif
 
 #ifdef _PR_INET6
     if (addr->raw.family == PR_AF_INET6)
@@ -2309,7 +2774,7 @@
     addrp = &addrcopy;
 #endif
     rv = GETNAMEINFO((const struct sockaddr *)addrp, addrlen,
-        string, size, NULL, 0, NI_NUMERICHOST);
+                     string, size, NULL, 0, NI_NUMERICHOST);
     if (rv != 0)
     {
         PR_SetError(PR_INVALID_ARGUMENT_ERROR, rv);
